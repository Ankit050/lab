{
  "model": {
    "url": "/imports/legacy-mw-content/converted/conversion-and-physics-examples/one-radial-bond$0.json",
    "viewOptions": {
      "controlButtons": "play_reset_step",
      "modelTimeLabel": true
    }
  },
  "components": [
    {
      "type": "button",
      "id": "subtract-velocity",
      "text": "&#8656; Subtract X Velocity",
      "action": "var props = getAtomProperties(0); props.vx -= 0.00002; setAtomProperties(0, props); props = getAtomProperties(1); props.vx -= 0.00002; setAtomProperties(1, props);"
    },
    {
      "type": "pulldown",
      "id": "pulldown1",
      "options": [
        {
          "text": "Bond Strength ...",
          "disabled": true
        },
        {
          "text": "x 4",
          "action": "var values = getRadialBond(0); values[3] = 10000 * 4; setRadialBond(0, values);"
        },
        {
          "text": "x 2",
          "action": "var values = getRadialBond(0); values[3] = 10000 * 2; setRadialBond(0, values);"
        },
        {
          "text": "x 1",
          "selected": true,
          "action": "var values = getRadialBond(0); values[3] = 10000 ; setRadialBond(0, values);"
        },
        {
          "text": "x 0.5",
          "action": "var values = getRadialBond(0); values[3] = 10000 * 0.5; setRadialBond(0, values);"
        },
        {
          "text": "x 0.1",
          "action": "var values = getRadialBond(0); values[3] = 10000 * 0.1; setRadialBond(0, values);"
        },
        {
          "text": "x 1e-2",
          "action": "var values = getRadialBond(0); values[3] = 10000 * 1e-2; setRadialBond(0, values);"
        },
        {
          "text": "x 1e-3",
          "action": "var values = getRadialBond(0); values[3] = 10000 * 1e-3; setRadialBond(0, values);"
        },
        {
          "text": "x 1e-4",
          "action": "var values = getRadialBond(0); values[3] = 10000 * 1e-4; setRadialBond(0, values);"
        },
        {
          "text": "x 1e-5",
          "action": "var values = getRadialBond(0); values[3] = 10000 * 1e-5; setRadialBond(0, values);"
        },
        {
          "text": "x 1e-6",
          "action": "var values = getRadialBond(0); values[3] = 10000 * 1e-6; setRadialBond(0, values);"
        }
      ]
    },
    {
      "type": "button",
      "id": "add-velocity",
      "text": "Add X Velocity &#8658;",
      "action": "var props = getAtomProperties(0); props.vx += 0.00002; setAtomProperties(0, props); props = getAtomProperties(1); props.vx += 0.00002; setAtomProperties(1, props);"
    },
    {
      "type": "energyGraph",
      "id": "ke-chart",
      "dimensions": { "width": 600, "height": 500 },
      "options": { "xmax": 40, "ymin": -1, "ymax": 1, "xFormatter": "3.2s", "yFormatter": "3.2s" }
    }
  ],
  "layout": {
    "right": [
      "ke-chart"
    ],
    "bottom": [
      "subtract-velocity",
      "pulldown1",
      "add-velocity"
    ]
  }
}