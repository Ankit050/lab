(function(){function i(e,t){"use strict";this.buffer=null,this.target=e,this.type=t,this.data=[]}function s(e,t,n){"use strict";var r;while((r=e.exec(t))!==null)n(r)}function o(e){"use strict";var t=Object.prototype.toString.call(e);return t==="[object Array]"||t==="[object Float32Array]"}function u(e){"use strict";var t=Object.prototype.toString.call(e);return t==="[object Number]"||t==="[object Boolean]"}typeof console=="undefined"&&(window.console={},console.log=console.info=console.warn=console.error=function(){}),energy2d={VERSION:"0.1.0"},energy2d.namespace=function(e){"use strict";var t=e.split("."),n=energy2d,r;t[0]==="energy2d"&&(t=t.slice(1));for(r=0;r<t.length;r+=1)typeof n[t[r]]=="undefined"&&(n[t[r]]={}),n=n[t[r]];return n};var e=e||{};e.glsl={},e.glsl["src/lab/models/energy2d/engine/physics-solvers-gpu/fluid-solver-glsl/apply-buoyancy.fs.glsl"]="// texture 0: \n// - R: t\n// - G: t0\n// - B: tb\n// - A: conductivity\nuniform sampler2D data0_tex;\n// texture 1: \n// - R: q\n// - G: capacity\n// - B: density\n// - A: fluidity\nuniform sampler2D data1_tex;\n// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nuniform vec2 grid;\nuniform float g;\nuniform float b;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data2 = texture2D(data2_tex, coord);\n  float fluidity = texture2D(data1_tex, coord).a;\n  \n  if (coord.x > grid.x && coord.x < 1.0 - grid.x &&\n      coord.y > grid.y && coord.y < 1.0 - grid.y &&\n      fluidity == 1.0) {\n    \n    vec2 dx = vec2(grid.x, 0.0);\n    vec2 dy = vec2(0.0, grid.y);\n    \n    float t = texture2D(data0_tex, coord).r;\n    // Get average column temperature.\n\n    float avg_t = t;\n    float count = 1.0;\n    vec2 n_coord = coord - dx;\n    // Silly while(true) loop (almost).\n    // While loops are not allowed.\n    // For loops with non-constant expressions also.\n    for (int i = 1; i != 0; i++) {\n      if (n_coord.x > 0.0 && texture2D(data1_tex, n_coord).a == 1.0) {\n        avg_t += texture2D(data0_tex, n_coord).r;\n        count += 1.0;\n        n_coord -= dx;\n      } else {\n        break;\n      }\n    }\n    n_coord = coord + dx;\n    // Silly while(true) loop (almost).\n    // While loops are not allowed.\n    // For loops with non-constant expressions also.\n    for (int i = 1; i != 0; i++) {\n      if (n_coord.x < 1.0 && texture2D(data1_tex, n_coord).a == 1.0) {\n        avg_t += texture2D(data0_tex, n_coord).r;\n        count += 1.0;\n        n_coord += dx;\n      } else {\n        break;\n      }\n    }\n    avg_t /= count;\n\n    // Update velocity V component.\n    data2.g += (g - b) * t + b * avg_t;\n  }\n\n  gl_FragColor = data2;\n}\n\n",e.glsl["src/lab/models/energy2d/engine/physics-solvers-gpu/fluid-solver-glsl/apply-u0v0-boundary.fs.glsl"]="// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nuniform vec2 grid;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data2 = texture2D(data2_tex, coord);\n  vec2 dx = vec2(grid.x, 0.0);\n  vec2 dy = vec2(0.0, grid.y);\n  // Process corners.\n  // TODO: values from previous step are used for corners.\n  if (coord.x < grid.x && coord.y < grid.y) {  \n    vec4 data2_p_dy = texture2D(data2_tex, coord + dy);\n    vec4 data2_p_dx = texture2D(data2_tex, coord + dx);\n    data2.ba = 0.5 * (data2_p_dy.ba + data2_p_dx.ba);\n  }\n  else if (coord.x > 1.0 - grid.x && coord.y < grid.y) {  \n    vec4 data2_p_dy = texture2D(data2_tex, coord + dy);\n    vec4 data2_m_dx = texture2D(data2_tex, coord - dx);\n    data2.ba = 0.5 * (data2_p_dy.ba + data2_m_dx.ba);\n  }\n  else if (coord.x > 1.0 - grid.x && coord.y > 1.0 - grid.y) {  \n    vec4 data2_m_dy = texture2D(data2_tex, coord - dy);\n    vec4 data2_m_dx = texture2D(data2_tex, coord - dx);\n    data2.ba = 0.5 * (data2_m_dy.ba + data2_m_dx.ba);\n  }\n  else if (coord.x < grid.x && coord.y > 1.0 - grid.y) {  \n    vec4 data2_m_dy = texture2D(data2_tex, coord - dy);\n    vec4 data2_p_dx = texture2D(data2_tex, coord + dx);\n    data2.ba = 0.5 * (data2_m_dy.ba + data2_p_dx.ba);\n  }\n  // Process boundaries.\n  // Left.\n  else if (coord.x < grid.x) {\n    data2.ba = texture2D(data2_tex, coord + dx).ba;\n  }\n  // Right.\n  else if (coord.x > 1.0 - grid.x) {\n    data2.ba = texture2D(data2_tex, coord - dx).ba;\n  }\n  // Down.\n  else if (coord.y < grid.y) {\n    data2.ba = texture2D(data2_tex, coord + dy).ba;\n  }\n  // Up.\n  else if (coord.y > 1.0 - grid.y) {\n    data2.ba = texture2D(data2_tex, coord - dy).ba;\n  }\n  \n  gl_FragColor = data2;\n}\n\n",e.glsl["src/lab/models/energy2d/engine/physics-solvers-gpu/fluid-solver-glsl/apply-uv-boundary.fs.glsl"]="// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nuniform vec2 grid;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data2 = texture2D(data2_tex, coord);\n  vec2 dx = vec2(grid.x, 0.0);\n  vec2 dy = vec2(0.0, grid.y);\n  // Process corners.\n  // TODO: values from previous step are used for corners.\n  if (coord.x < grid.x && coord.y < grid.y) {  \n    vec4 data2_p_dy = texture2D(data2_tex, coord + dy);\n    vec4 data2_p_dx = texture2D(data2_tex, coord + dx);\n    data2.rg = 0.5 * (data2_p_dy.rg + data2_p_dx.rg);\n  }\n  else if (coord.x > 1.0 - grid.x && coord.y < grid.y) {  \n    vec4 data2_p_dy = texture2D(data2_tex, coord + dy);\n    vec4 data2_m_dx = texture2D(data2_tex, coord - dx);\n    data2.rg = 0.5 * (data2_p_dy.rg + data2_m_dx.rg);\n  }\n  else if (coord.x > 1.0 - grid.x && coord.y > 1.0 - grid.y) {  \n    vec4 data2_m_dy = texture2D(data2_tex, coord - dy);\n    vec4 data2_m_dx = texture2D(data2_tex, coord - dx);\n    data2.rg = 0.5 * (data2_m_dy.rg + data2_m_dx.rg);\n  }\n  else if (coord.x < grid.x && coord.y > 1.0 - grid.y) {  \n    vec4 data2_m_dy = texture2D(data2_tex, coord - dy);\n    vec4 data2_p_dx = texture2D(data2_tex, coord + dx);\n    data2.rg = 0.5 * (data2_m_dy.rg + data2_p_dx.rg);\n  }\n  // Process boundaries.\n  // Left.\n  else if (coord.x < grid.x) {\n    vec4 data2_p_dx = texture2D(data2_tex, coord + dx);\n    data2.rg = vec2(data2_p_dx.r, -data2_p_dx.g);\n  }\n  // Right.\n  else if (coord.x > 1.0 - grid.x) {\n    vec4 data2_m_dx = texture2D(data2_tex, coord - dx);\n    data2.rg = vec2(data2_m_dx.r, -data2_m_dx.g);\n  }\n  // Down.\n  else if (coord.y < grid.y) {\n    vec4 data2_p_dy = texture2D(data2_tex, coord + dy);\n    data2.rg = vec2(-data2_p_dy.r, data2_p_dy.g);\n  }\n  // Up.\n  else if (coord.y > 1.0 - grid.y) {\n    vec4 data2_m_dy = texture2D(data2_tex, coord - dy);\n    data2.rg = vec2(-data2_m_dy.r, data2_m_dy.g);\n  }\n  \n  gl_FragColor = data2;\n}\n\n",e.glsl["src/lab/models/energy2d/engine/physics-solvers-gpu/fluid-solver-glsl/basic.vs.glsl"]="varying vec2 coord;\n\nvoid main() {\n  coord = gl_Vertex.xy * 0.5 + 0.5;\n  gl_Position = vec4(gl_Vertex.xy, 0.0, 1.0);\n}\n\n",e.glsl["src/lab/models/energy2d/engine/physics-solvers-gpu/fluid-solver-glsl/conserve-step1.fs.glsl"]="// texture 1: \n// - R: q\n// - G: capacity\n// - B: density\n// - A: fluidity\nuniform sampler2D data1_tex;\n// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nuniform vec2 grid;\nuniform float i2dx;\nuniform float i2dy;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data2 = texture2D(data2_tex, coord);\n  float fluidity = texture2D(data1_tex, coord).a;\n  \n  if (coord.x > grid.x && coord.x < 1.0 - grid.x &&\n      coord.y > grid.y && coord.y < 1.0 - grid.y &&\n      fluidity == 1.0) {\n    \n    vec2 dx = vec2(grid.x, 0.0);\n    vec2 dy = vec2(0.0, grid.y);\n    \n    vec4 data2_m_dy = texture2D(data2_tex, coord - dy);\n    vec4 data2_p_dy = texture2D(data2_tex, coord + dy);\n    vec4 data2_m_dx = texture2D(data2_tex, coord - dx);\n    vec4 data2_p_dx = texture2D(data2_tex, coord + dx);\n    \n    // Phi.\n    data2.b = 0.0;\n    // Div.\n    data2.a = (data2_p_dy.r - data2_m_dy.r) * i2dx + (data2_p_dx.g - data2_m_dx.g) * i2dy;\n  }\n\n  gl_FragColor = data2;\n}\n\n",e.glsl["src/lab/models/energy2d/engine/physics-solvers-gpu/fluid-solver-glsl/conserve-step2.fs.glsl"]="// texture 1: \n// - R: q\n// - G: capacity\n// - B: density\n// - A: fluidity\nuniform sampler2D data1_tex;\n// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nuniform vec2 grid;\nuniform float s;\nuniform float idxsq;\nuniform float idysq;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data2 = texture2D(data2_tex, coord);\n  float fluidity = texture2D(data1_tex, coord).a;\n  \n  if (coord.x > grid.x && coord.x < 1.0 - grid.x &&\n      coord.y > grid.y && coord.y < 1.0 - grid.y &&\n      fluidity == 1.0) {\n    \n    vec2 dx = vec2(grid.x, 0.0);\n    vec2 dy = vec2(0.0, grid.y);\n    \n    vec4 data2_m_dy = texture2D(data2_tex, coord - dy);\n    vec4 data2_p_dy = texture2D(data2_tex, coord + dy);\n    vec4 data2_m_dx = texture2D(data2_tex, coord - dx);\n    vec4 data2_p_dx = texture2D(data2_tex, coord + dx);\n    \n    // Phi.\n    data2.b = s * ((data2_m_dy.b + data2_p_dy.b) * idxsq + (data2_m_dx.b + data2_p_dx.b) * idysq - data2.a);\n  }\n\n  gl_FragColor = data2;\n}\n\n",e.glsl["src/lab/models/energy2d/engine/physics-solvers-gpu/fluid-solver-glsl/conserve-step3.fs.glsl"]="// texture 1: \n// - R: q\n// - G: capacity\n// - B: density\n// - A: fluidity\nuniform sampler2D data1_tex;\n// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nuniform vec2 grid;\nuniform float i2dx;\nuniform float i2dy;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data2 = texture2D(data2_tex, coord);\n  float fluidity = texture2D(data1_tex, coord).a;\n  \n  if (coord.x > grid.x && coord.x < 1.0 - grid.x &&\n      coord.y > grid.y && coord.y < 1.0 - grid.y &&\n      fluidity == 1.0) {\n    \n    vec2 dx = vec2(grid.x, 0.0);\n    vec2 dy = vec2(0.0, grid.y);\n    \n    vec4 data2_m_dy = texture2D(data2_tex, coord - dy);\n    vec4 data2_p_dy = texture2D(data2_tex, coord + dy);\n    vec4 data2_m_dx = texture2D(data2_tex, coord - dx);\n    vec4 data2_p_dx = texture2D(data2_tex, coord + dx);\n    \n    // U.\n    data2.r -= (data2_p_dy.b - data2_m_dy.b) * i2dx;\n    // V.\n    data2.g -= (data2_p_dx.b - data2_m_dx.b) * i2dy;\n  }\n\n  gl_FragColor = data2;\n}\n\n",e.glsl["src/lab/models/energy2d/engine/physics-solvers-gpu/fluid-solver-glsl/diffuse.fs.glsl"]="// texture 1: \n// - R: q\n// - G: capacity\n// - B: density\n// - A: fluidity\nuniform sampler2D data1_tex;\n// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nuniform vec2 grid;\nuniform float hx;\nuniform float hy;\nuniform float dn;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data2 = texture2D(data2_tex, coord);\n  float fluidity = texture2D(data1_tex, coord).a;\n  \n  if (coord.x > grid.x && coord.x < 1.0 - grid.x &&\n      coord.y > grid.y && coord.y < 1.0 - grid.y &&\n      fluidity == 1.0) {\n    \n    vec2 dx = vec2(grid.x, 0.0);\n    vec2 dy = vec2(0.0, grid.y);\n    \n    vec4 data2_m_dy = texture2D(data2_tex, coord - dy);\n    vec4 data2_p_dy = texture2D(data2_tex, coord + dy);\n    vec4 data2_m_dx = texture2D(data2_tex, coord - dx);\n    vec4 data2_p_dx = texture2D(data2_tex, coord + dx);\n    // Update velocity UV components.\n    data2.rg = (data2.ba + hx * (data2_m_dy.rg + data2_p_dy.rg)\n                         + hy * (data2_m_dx.rg + data2_p_dx.rg)) * dn;\n  }\n\n  gl_FragColor = data2;\n}\n\n",e.glsl["src/lab/models/energy2d/engine/physics-solvers-gpu/fluid-solver-glsl/maccormack-step1.fs.glsl"]="// texture 1: \n// - R: q\n// - G: capacity\n// - B: density\n// - A: fluidity\nuniform sampler2D data1_tex;\n// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nuniform vec2 grid;\nuniform float tx;\nuniform float ty;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data2 = texture2D(data2_tex, coord);\n  float fluidity = texture2D(data1_tex, coord).a;\n  \n  if (coord.x > grid.x && coord.x < 1.0 - grid.x &&\n      coord.y > grid.y && coord.y < 1.0 - grid.y &&\n      fluidity == 1.0) {\n    \n    vec2 dx = vec2(grid.x, 0.0);\n    vec2 dy = vec2(0.0, grid.y);\n    \n    vec4 data2_m_dy = texture2D(data2_tex, coord - dy);\n    vec4 data2_p_dy = texture2D(data2_tex, coord + dy);\n    vec4 data2_m_dx = texture2D(data2_tex, coord - dx);\n    vec4 data2_p_dx = texture2D(data2_tex, coord + dx);\n    // Update velocity UV components.\n    data2.rg = data2.ba - tx * (data2_p_dy.bb * data2_p_dy.ba - data2_m_dy.bb * data2_m_dy.ba)\n              - ty * (data2_p_dx.aa * data2_p_dx.ba - data2_m_dx.aa * data2_m_dx.ba);\n  }\n\n  gl_FragColor = data2;\n}\n\n",e.glsl["src/lab/models/energy2d/engine/physics-solvers-gpu/fluid-solver-glsl/maccormack-step2.fs.glsl"]="// texture 1: \n// - R: q\n// - G: capacity\n// - B: density\n// - A: fluidity\nuniform sampler2D data1_tex;\n// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nuniform vec2 grid;\nuniform float tx;\nuniform float ty;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data2 = texture2D(data2_tex, coord);\n  float fluidity = texture2D(data1_tex, coord).a;\n  \n  if (coord.x > grid.x && coord.x < 1.0 - grid.x &&\n      coord.y > grid.y && coord.y < 1.0 - grid.y &&\n      fluidity == 1.0) {\n    \n    vec2 dx = vec2(grid.x, 0.0);\n    vec2 dy = vec2(0.0, grid.y);\n    \n    vec4 data2_m_dy = texture2D(data2_tex, coord - dy);\n    vec4 data2_p_dy = texture2D(data2_tex, coord + dy);\n    vec4 data2_m_dx = texture2D(data2_tex, coord - dx);\n    vec4 data2_p_dx = texture2D(data2_tex, coord + dx);\n    // Update velocity UV components.\n    data2.rg = 0.5 * (data2.ba + data2.rg) \n            - 0.5 * tx * data2.bb * (data2_p_dy.rg - data2_m_dy.rg)\n            - 0.5 * ty * data2.aa * (data2_p_dx.rg - data2_m_dx.rg);\n  }\n\n  gl_FragColor = data2;\n}\n\n",e.glsl["src/lab/models/energy2d/engine/physics-solvers-gpu/fluid-solver-glsl/set-obstacle-boundary.fs.glsl"]="// texture 1: \n// - R: q\n// - G: capacity\n// - B: density\n// - A: fluidity\nuniform sampler2D data1_tex;\n// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nuniform vec2 grid;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data2 = texture2D(data2_tex, coord);\n  float fluidity = texture2D(data1_tex, coord).a;\n  \n  if (coord.x > grid.x && coord.x < 1.0 - grid.x &&\n      coord.y > grid.y && coord.y < 1.0 - grid.y &&\n      fluidity == 0.0) {\n    \n    vec2 dx = vec2(grid.x, 0.0);\n    vec2 dy = vec2(0.0, grid.y);\n\n    if (texture2D(data1_tex, coord - dy).a == 1.0) {\n      data2.ba = texture2D(data2_tex, coord - dy).ba;\n    } \n    else if (texture2D(data1_tex, coord + dy).a == 1.0) {\n      data2.ba = texture2D(data2_tex, coord + dy).ba;\n    } \n\n    if (texture2D(data1_tex, coord - dx).a == 1.0) {\n      data2.ba = texture2D(data2_tex, coord - dx).ba;\n    } \n    else if (texture2D(data1_tex, coord + dx).a == 1.0) {\n      data2.ba = texture2D(data2_tex, coord + dx).ba;\n    } \n  }\n\n  gl_FragColor = data2;\n}\n\n",e.glsl["src/lab/models/energy2d/engine/physics-solvers-gpu/fluid-solver-glsl/set-obstacle-velocity.fs.glsl"]="// texture 1: \n// - R: q\n// - G: capacity\n// - B: density\n// - A: fluidity\nuniform sampler2D data1_tex;\n// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n// texture 3: \n// - R: uWind\n// - G: vWind\n// - B: undefined\n// - A: undefined\nuniform sampler2D data3_tex;\n\nuniform vec2 grid;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data2 = texture2D(data2_tex, coord);\n  float fluidity = texture2D(data1_tex, coord).a;\n\n  if (coord.x > grid.x && coord.x < 1.0 - grid.x &&\n      coord.y > grid.y && coord.y < 1.0 - grid.y &&\n      fluidity == 0.0) {\n    \n    vec2 dx = vec2(grid.x, 0.0);\n    vec2 dy = vec2(0.0, grid.y);\n\n    int count = 0;\n\n    if (texture2D(data1_tex, coord - dy).a == 1.0) {\n      count += 1;\n      vec2 data2_m_dy = texture2D(data2_tex, coord - dy).rg;\n      data2.rg = texture2D(data3_tex, coord).rg + vec2(-data2_m_dy.r, data2_m_dy.g);\n    } \n    else if (texture2D(data1_tex, coord + dy).a == 1.0) {\n      count += 1;\n      vec2 data2_p_dy = texture2D(data2_tex, coord + dy).rg;\n      data2.rg = texture2D(data3_tex, coord).rg + vec2(-data2_p_dy.r, data2_p_dy.g);\n    } \n\n    if (texture2D(data1_tex, coord - dx).a == 1.0) {\n      count += 1;\n      vec2 data2_m_dx = texture2D(data2_tex, coord - dx).rg;\n      data2.rg = texture2D(data3_tex, coord).rg + vec2(data2_m_dx.r, -data2_m_dx.g);\n    } \n    else if (texture2D(data1_tex, coord + dx).a == 1.0) {\n      count += 1;\n      vec2 data2_p_dx = texture2D(data2_tex, coord + dx).rg;\n      data2.rg = texture2D(data3_tex, coord).rg + vec2(data2_p_dx.r, -data2_p_dx.g);\n    } \n\n    if (count == 0) {\n      data2.rg = texture2D(data3_tex, coord).rg;\n    }\n  }\n  \n  gl_FragColor = data2;\n}\n\n",e.glsl["src/lab/models/energy2d/engine/physics-solvers-gpu/fluid-solver-glsl/uv-to-u0v0.fs.glsl"]="// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nvarying vec2 coord;\n\nvoid main() {\n	vec4 data2 = texture2D(data2_tex, coord);\n	data2.ba = data2.rg;\n	gl_FragColor = data2;\n}\n\n",e.glsl["src/lab/models/energy2d/engine/physics-solvers-gpu/heat-solver-glsl/basic.vs.glsl"]="varying vec2 coord;\n\nvoid main() {\n  coord = gl_Vertex.xy * 0.5 + 0.5;\n  gl_Position = vec4(gl_Vertex.xy, 0.0, 1.0);\n}\n\n",e.glsl["src/lab/models/energy2d/engine/physics-solvers-gpu/heat-solver-glsl/force-flux-t.fs.glsl"]="// texture 0: \n// - R: t\n// - G: t0\n// - B: tb\n// - A: conductivity\nuniform sampler2D data0_tex;\n\nuniform vec2 grid;\nuniform float vN;\nuniform float vS;\nuniform float vW;\nuniform float vE;\nuniform float delta_x;\nuniform float delta_y;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data0 = texture2D(data0_tex, coord);\n  vec2 dx = vec2(grid.x, 0.0);\n  vec2 dy = vec2(0.0, grid.y);\n  if (coord.x < grid.x) {\n    data0.r = texture2D(data0_tex, coord + dx).r\n            + vN * delta_y / data0.a;\n  } else if (coord.x > 1.0 - grid.x) {\n    data0.r = texture2D(data0_tex, coord - dx).r\n            - vS * delta_y / data0.a;\n  } else if (coord.y < grid.y) {\n    data0.r = texture2D(data0_tex, coord + dy).r\n            - vW * delta_x / data0.a;\n  } else if (coord.y > 1.0 - grid.y) {\n    data0.r = texture2D(data0_tex, coord - dy).r\n            + vE * delta_x / data0.a;\n  }\n  gl_FragColor = data0;\n}\n\n",e.glsl["src/lab/models/energy2d/engine/physics-solvers-gpu/heat-solver-glsl/force-flux-t0.fs.glsl"]="// texture 0: \n// - R: t\n// - G: t0\n// - B: tb\n// - A: conductivity\nuniform sampler2D data0_tex;\n\nuniform vec2 grid;\nuniform float vN;\nuniform float vS;\nuniform float vW;\nuniform float vE;\nuniform float delta_x;\nuniform float delta_y;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data0 = texture2D(data0_tex, coord);\n  vec2 dx = vec2(grid.x, 0.0);\n  vec2 dy = vec2(0.0, grid.y);\n  if (coord.x < grid.x) {\n    data0.g = texture2D(data0_tex, coord + dx).r\n            + vN * delta_y / data0.a;\n  } else if (coord.x > 1.0 - grid.x) {\n    data0.g = texture2D(data0_tex, coord - dx).r\n            - vS * delta_y / data0.a;\n  } else if (coord.y < grid.y) {\n    data0.g = texture2D(data0_tex, coord + dy).r\n            - vW * delta_x / data0.a;\n  } else if (coord.y > 1.0 - grid.y) {\n    data0.g = texture2D(data0_tex, coord - dy).r\n            + vE * delta_x / data0.a;\n  }\n  gl_FragColor = data0;\n}\n\n",e.glsl["src/lab/models/energy2d/engine/physics-solvers-gpu/heat-solver-glsl/maccormack-step1.fs.glsl"]='// texture 0: \n// - R: t\n// - G: t0\n// - B: tb\n// - A: conductivity\nuniform sampler2D data0_tex;\n// texture 1: \n// - R: q\n// - G: capacity\n// - B: density\n// - A: fluidity\nuniform sampler2D data1_tex;\n// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nuniform vec2 grid;\nuniform float tx;\nuniform float ty;\n\n// Boundary conditions uniforms.\nuniform float enforce_temp;\nuniform float vN;\nuniform float vS;\nuniform float vW;\nuniform float vE;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data0 = texture2D(data0_tex, coord);\n  \n  if (coord.x > grid.x && coord.x < 1.0 - grid.x &&\n      coord.y > grid.y && coord.y < 1.0 - grid.y) {\n    \n    float fluidity = texture2D(data1_tex, coord).a;\n    if (fluidity == 1.0) {\n      vec2 dx = vec2(grid.x, 0.0);\n      vec2 dy = vec2(0.0, grid.y);\n\n      // Temperature.\n      float t_m_dy = texture2D(data0_tex, coord - dy).r;\n      float t_p_dy = texture2D(data0_tex, coord + dy).r;\n      float t_m_dx = texture2D(data0_tex, coord - dx).r;\n      float t_p_dx = texture2D(data0_tex, coord + dx).r;\n      // Velocity.\n      float u_m_dy = texture2D(data2_tex, coord - dy).r;\n      float u_p_dy = texture2D(data2_tex, coord + dy).r;\n      float v_m_dx = texture2D(data2_tex, coord - dx).g;\n      float v_p_dx = texture2D(data2_tex, coord + dx).g;\n      // Update T0.\n      data0.g = data0.r - tx * (u_p_dy * t_p_dy - u_m_dy * t_m_dy)\n                        - ty * (v_p_dx * t_p_dx - v_m_dx * t_m_dx);\n    }\n  } else if (enforce_temp == 1.0) {\n    // "temperature at border" boundary conditions are\n    // integrated into this shader.\n    if (coord.x < grid.x) {\n      data0.g = vN;\n    } else if (coord.x > 1.0 - grid.x) {\n      data0.g = vS;\n    } else if (coord.y < grid.y) {\n      data0.g = vW;\n    } else if (coord.y > 1.0 - grid.y) {\n      data0.g = vE;\n    }\n  }\n  gl_FragColor = data0;\n}\n\n',e.glsl["src/lab/models/energy2d/engine/physics-solvers-gpu/heat-solver-glsl/maccormack-step2.fs.glsl"]='// texture 0: \n// - R: t\n// - G: t0\n// - B: tb\n// - A: conductivity\nuniform sampler2D data0_tex;\n// texture 1: \n// - R: q\n// - G: capacity\n// - B: density\n// - A: fluidity\nuniform sampler2D data1_tex;\n// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nuniform vec2 grid;\nuniform float tx;\nuniform float ty;\n\n// Boundary conditions uniforms.\nuniform float enforce_temp;\nuniform float vN;\nuniform float vS;\nuniform float vW;\nuniform float vE;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data0 = texture2D(data0_tex, coord);\n  \n  if (coord.x > grid.x && coord.x < 1.0 - grid.x &&\n      coord.y > grid.y && coord.y < 1.0 - grid.y) {\n    \n    float fluidity = texture2D(data1_tex, coord).a;\n    if (fluidity == 1.0) {\n      vec2 dx = vec2(grid.x, 0.0);\n      vec2 dy = vec2(0.0, grid.y);\n\n      // Temperature t0.\n      float t0_m_dy = texture2D(data0_tex, coord - dy).g;\n      float t0_p_dy = texture2D(data0_tex, coord + dy).g;\n      float t0_m_dx = texture2D(data0_tex, coord - dx).g;\n      float t0_p_dx = texture2D(data0_tex, coord + dx).g;\n      // Velocity.\n      float u = texture2D(data2_tex, coord).r;\n      float v = texture2D(data2_tex, coord).g;\n      // Update T.\n      data0.r = 0.5 * (data0.r + data0.g)\n              - 0.5 * tx * u * (t0_p_dy - t0_m_dy)\n              - 0.5 * ty * v * (t0_p_dx - t0_m_dx);\n    }\n  } else if (enforce_temp == 1.0) {\n    // "temperature at border" boundary conditions are\n    // integrated into this shader.\n    if (coord.x < grid.x) {\n      data0.r = vN;\n    } else if (coord.x > 1.0 - grid.x) {\n      data0.r = vS;\n    } else if (coord.y < grid.y) {\n      data0.r = vW;\n    } else if (coord.y > 1.0 - grid.y) {\n      data0.r = vE;\n    }\n  }\n  gl_FragColor = data0;\n}\n\n',e.glsl["src/lab/models/energy2d/engine/physics-solvers-gpu/heat-solver-glsl/solver.fs.glsl"]='// texture 0: \n// - R: t\n// - G: t0\n// - B: tb\n// - A: conductivity\nuniform sampler2D data0_tex;\n// texture 1: \n// - R: q\n// - G: capacity\n// - B: density\n// - A: fluidity\nuniform sampler2D data1_tex;\n\nuniform vec2 grid;\nuniform float hx;\nuniform float hy;\nuniform float inv_timestep;\n\n// Boundary conditions uniforms\nuniform float enforce_temp;\nuniform float vN;\nuniform float vS;\nuniform float vW;\nuniform float vE;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data0 = texture2D(data0_tex, coord);\n  if (coord.x > grid.x && coord.x < 1.0 - grid.x &&\n      coord.y > grid.y && coord.y < 1.0 - grid.y) {\n    vec2 dx = vec2(grid.x, 0.0);\n    vec2 dy = vec2(0.0, grid.y);\n    float tb = data0.b;\n    // Check if tb is NaN. isnan() function is not available\n    // in OpenGL ES GLSL, so use some tricks. IEEE 754 spec defines\n    // that NaN != NaN, however this seems to not work on Windows.\n    // So, also check if the value is outside [-3.4e38, 3.4e38] (3.4e38\n    // is close to 32Float max value), as such values are not expected.\n    if (tb != tb || tb < -3.4e38 || tb > 3.4e38) {\n      vec4 data1 = texture2D(data1_tex, coord);\n      vec4 data0_m_dy = texture2D(data0_tex, coord - dy);\n      vec4 data0_p_dy = texture2D(data0_tex, coord + dy);\n      vec4 data0_m_dx = texture2D(data0_tex, coord - dx);\n      vec4 data0_p_dx = texture2D(data0_tex, coord + dx);\n      float sij = data1.g * data1.b * inv_timestep;\n      float rij = data0.a;\n      float axij = hx * (rij + data0_m_dy.a);\n      float bxij = hx * (rij + data0_p_dy.a);\n      float ayij = hy * (rij + data0_m_dx.a);\n      float byij = hy * (rij + data0_p_dx.a);\n      data0.r = (data0.g * sij + data1.r\n                 + axij * data0_m_dy.r\n                 + bxij * data0_p_dy.r\n                 + ayij * data0_m_dx.r\n                 + byij * data0_p_dx.r)\n                 / (sij + axij + bxij + ayij + byij);\n    } else {\n      data0.r = tb;\n    }\n  } else if (enforce_temp == 1.0) {\n    // "temperature at border" boundary conditions are\n    // integrated into this shader.\n    if (coord.x < grid.x) {\n      data0.r = vN;\n    } else if (coord.x > 1.0 - grid.x) {\n      data0.r = vS;\n    } else if (coord.y < grid.y) {\n      data0.r = vW;\n    } else if (coord.y > 1.0 - grid.y) {\n      data0.r = vE;\n    }\n  }\n  gl_FragColor = data0;\n}\n\n',e.glsl["src/lab/models/energy2d/engine/physics-solvers-gpu/heat-solver-glsl/t-to-t0.fs.glsl"]="// texture 0: \n// - R: t\n// - G: t0\n// - B: tb\n// - A: conductivity\nuniform sampler2D data0_tex;\n\nvarying vec2 coord;\n\nvoid main() {\n	vec4 data0 = texture2D(data0_tex, coord);\n	data0.g = data0.r;\n	gl_FragColor = data0;\n}\n\n",e.glsl["src/lab/views/energy2d/heatmap-webgl-glsl/basic.vs.glsl"]="varying vec2 coord;\n\nvoid main() {\n  coord = gl_TexCoord.xy;\n  gl_Position = vec4(gl_Vertex.xyz, 1.0);\n}\n\n",e.glsl["src/lab/views/energy2d/heatmap-webgl-glsl/temp-renderer.fs.glsl"]="// Provided textur contains temperature data in R channel.\nuniform sampler2D heatmap_tex;\nuniform sampler2D palette_tex;\n\nuniform float max_temp;\nuniform float min_temp;\n\nvarying vec2 coord;\n\nvoid main() {\n  float temp = texture2D(heatmap_tex, coord).r;\n  float scaled_temp = (temp - min_temp) / (max_temp - min_temp);\n  gl_FragColor = texture2D(palette_tex, vec2(scaled_temp, 0.5));\n}\n\n",e.glsl["src/lab/views/energy2d/vectormap-webgl-glsl/vectormap.fs.glsl"]="uniform vec4 color;\n\nvoid main() {\n  gl_FragColor = color;\n}\n\n",e.glsl["src/lab/views/energy2d/vectormap-webgl-glsl/vectormap.vs.glsl"]="// Provided texture contains vector data in RG channels.\nattribute vec2 origin;\n\nuniform sampler2D vectormap_tex;\nuniform float base_length;\nuniform float vector_scale;\nuniform vec2 scale;\n\nvoid main() {\n  // Read vector which should be visualized.\n  vec2 vec = texture2D(vectormap_tex, gl_TexCoord.xy).xy;\n  vec.y = -vec.y;\n\n  if (length(vec) < 1e-15) {\n    // Do not draw to small vectors.\n    // Set position outside [-1, 1] region, which is rendered.\n    gl_Position = vec4(2.0);\n    return;\n  }\n\n  // Test which part of the vector arrow is being processed. \n  if (gl_Vertex.x == 0.0 && gl_Vertex.y == 0.0) {\n    // Origin of the arrow is being processed.\n    // Just transform its coordinates.\n    gl_Position = vec4(origin, 0.0, 1.0);\n  } else {\n    // Other parts of arrow are being processed.\n    // Set proper length of the arrow, rotate it, scale\n    // and finally transform.\n\n    // Calculate arrow length.\n    vec2 new_pos = gl_Vertex.xy;\n    new_pos.x += base_length + vector_scale * length(vec);\n\n    // Calculate angle between reference arrow (horizontal).\n    vec = normalize(vec);\n    float angle = acos(dot(vec, vec2(1.0, 0.0)));\n    if (vec.y < 0.0) {\n      angle = -angle;\n    }\n    // Prepare rotation matrix.\n    // See: http://en.wikipedia.org/wiki/Rotation_matrix\n    mat2 rot_m = mat2(\n      cos(angle), sin(angle),\n     -sin(angle), cos(angle)\n    );\n    // Rotate.\n    new_pos = rot_m * new_pos;\n    // Scale.\n    new_pos = new_pos * scale;\n    // Transform.\n    gl_Position = vec4(new_pos + origin, 0.0, 1.0);\n  }\n}\n\n";var t=function(e,n){var r=t.resolve(e,n||"/"),i=t.modules[r];if(!i)throw new Error("Failed to resolve module "+e+", tried "+r);var s=i._cached?i._cached:i();return s};t.paths=[],t.modules={},t.extensions=[".js",".coffee"],t._core={assert:!0,events:!0,fs:!0,path:!0,vm:!0},t.resolve=function(){return function(e,n){function u(e){if(t.modules[e])return e;for(var n=0;n<t.extensions.length;n++){var r=t.extensions[n];if(t.modules[e+r])return e+r}}function a(e){e=e.replace(/\/+$/,"");var n=e+"/package.json";if(t.modules[n]){var i=t.modules[n](),s=i.browserify;if(typeof s=="object"&&s.main){var o=u(r.resolve(e,s.main));if(o)return o}else if(typeof s=="string"){var o=u(r.resolve(e,s));if(o)return o}else if(i.main){var o=u(r.resolve(e,i.main));if(o)return o}}return u(e+"/index")}function f(e,t){var n=l(t);for(var r=0;r<n.length;r++){var i=n[r],s=u(i+"/"+e);if(s)return s;var o=a(i+"/"+e);if(o)return o}var s=u(e);if(s)return s}function l(e){var t;e==="/"?t=[""]:t=r.normalize(e).split("/");var n=[];for(var i=t.length-1;i>=0;i--){if(t[i]==="node_modules")continue;var s=t.slice(0,i+1).join("/")+"/node_modules";n.push(s)}return n}n||(n="/");if(t._core[e])return e;var r=t.modules.path();n=r.resolve("/",n);var i=n||"/";if(e.match(/^(?:\.\.?\/|\/)/)){var s=u(r.resolve(i,e))||a(r.resolve(i,e));if(s)return s}var o=f(e,i);if(o)return o;throw new Error("Cannot find module '"+e+"'")}}(),t.alias=function(e,n){var r=t.modules.path(),i=null;try{i=t.resolve(e+"/package.json","/")}catch(s){i=t.resolve(e,"/")}var o=r.dirname(i),u=(Object.keys||function(e){var t=[];for(var n in e)t.push(n);return t})(t.modules);for(var a=0;a<u.length;a++){var f=u[a];if(f.slice(0,o.length+1)===o+"/"){var l=f.slice(o.length);t.modules[n+l]=t.modules[o+l]}else f===o&&(t.modules[n]=t.modules[o])}},t.define=function(e,n){var r=t._core[e]?"":t.modules.path().dirname(e),i=function(e){return t(e,r)};i.resolve=function(e){return t.resolve(e,r)},i.modules=t.modules,i.define=t.define;var s={exports:{}};t.modules[e]=function(){return t.modules[e]._cached=s.exports,n.call(s.exports,i,s,s.exports,r,e),t.modules[e]._cached=s.exports,s.exports}},typeof process=="undefined"&&(process={}),process.nextTick||(process.nextTick=function(){var e=[],t=typeof window!="undefined"&&window.postMessage&&window.addEventListener;return t&&window.addEventListener("message",function(t){if(t.source===window&&t.data==="browserify-tick"){t.stopPropagation();if(e.length>0){var n=e.shift();n()}}},!0),function(n){t?(e.push(n),window.postMessage("browserify-tick","*")):setTimeout(n,0)}}()),process.title||(process.title="browser"),process.binding||(process.binding=function(e){if(e==="evals")return t("vm");throw new Error("No such module")}),process.cwd||(process.cwd=function(){return"."}),process.env||(process.env={}),process.argv||(process.argv=[]),t.define("path",function(e,t,n,r,i){function s(e,t){var n=[];for(var r=0;r<e.length;r++)t(e[r],r,e)&&n.push(e[r]);return n}function o(e,t){var n=0;for(var r=e.length;r>=0;r--){var i=e[r];i=="."?e.splice(r,1):i===".."?(e.splice(r,1),n++):n&&(e.splice(r,1),n--)}if(t)for(;n--;n)e.unshift("..");return e}var u=/^(.+\/(?!$)|\/)?((?:.+?)?(\.[^.]*)?)$/;n.resolve=function(){var e="",t=!1;for(var n=arguments.length;n>=-1&&!t;n--){var r=n>=0?arguments[n]:process.cwd();if(typeof r!="string"||!r)continue;e=r+"/"+e,t=r.charAt(0)==="/"}return e=o(s(e.split("/"),function(e){return!!e}),!t).join("/"),(t?"/":"")+e||"."},n.normalize=function(e){var t=e.charAt(0)==="/",n=e.slice(-1)==="/";return e=o(s(e.split("/"),function(e){return!!e}),!t).join("/"),!e&&!t&&(e="."),e&&n&&(e+="/"),(t?"/":"")+e},n.join=function(){var e=Array.prototype.slice.call(arguments,0);return n.normalize(s(e,function(e,t){return e&&typeof e=="string"}).join("/"))},n.dirname=function(e){var t=u.exec(e)[1]||"",n=!1;return t?t.length===1||n&&t.length<=3&&t.charAt(1)===":"?t:t.substring(0,t.length-1):"."},n.basename=function(e,t){var n=u.exec(e)[2]||"";return t&&n.substr(-1*t.length)===t&&(n=n.substr
(0,n.length-t.length)),n},n.extname=function(e){return u.exec(e)[3]||""}}),t.define("/arrays/arrays.js",function(e,t,n,r,i){var s;s=n.arrays={},s.version="0.0.1",s.webgl=typeof window!="undefined"&&!!window.WebGLRenderingContext,s.typed=!1;try{var o=new Float64Array(0);s.typed=!0}catch(u){}s.create=function(e,t,n){n||(s.webgl||s.typed?n="Float32Array":n="regular"),t===undefined&&(t=0);var r,i;if(n==="regular")r=new Array(e);else switch(n){case"Float64Array":r=new Float64Array(e);break;case"Float32Array":r=new Float32Array(e);break;case"Int32Array":r=new Int32Array(e);break;case"Int16Array":r=new Int16Array(e);break;case"Int8Array":r=new Int8Array(e);break;case"Uint32Array":r=new Uint32Array(e);break;case"Uint16Array":r=new Uint16Array(e);break;case"Uint8Array":r=new Uint8Array(e);break;default:r=new Array(e)}i=-1;while(++i<e)r[i]=t;return r},s.constructor_function=function(e){if(e.buffer&&e.buffer.__proto__&&e.buffer.__proto__.constructor)return e.__proto__.constructor;if(e.constructor===Array)return e.constructor;throw new Error("arrays.constructor_function: must be an Array or Typed Array:   source: "+e+", source.constructor: "+e.constructor+", source.buffer: "+e.buffer+", source.buffer.slice: "+e.buffer.slice+", source.buffer.__proto__: "+e.buffer.__proto__+", source.buffer.__proto__.constructor: "+e.buffer.__proto__.constructor)},s.copy=function(e,t){var n=e.length,r=-1;while(++r<n)t[r]=e[r];return s.constructor_function(t)===Array&&(t.length=n),t},s.clone=function(e){var t,n=e.length,r,i;i=s.constructor_function(e);if(i===Array){r=new i(n);for(t=0;t<n;t++)r[t]=e[t];return r}if(e.buffer.slice)return r=new i(e.buffer.slice(0)),r;r=new i(n);for(t=0;t<n;t++)r[t]=e[t];return r},s.between=function(e,t,n){return n<Math.max(e,t)&&n>Math.min(e,t)},s.max=function(e){return Math.max.apply(Math,e)},s.min=function(e){return Math.min.apply(Math,e)},s.maxTypedArray=function(e){var t,n,r=Number.MIN_VALUE,i=e.length;for(n=0;n<i;n++)t=e[n],r=t>r?t:r;return r},s.minTypedArray=function(e){var t,n,r=Number.MAX_VALUE,i=e.length;for(n=0;n<i;n++)t=e[n],r=t<r?t:r;return r},s.maxAnyArray=function(e){try{return Math.max.apply(Math,e)}catch(t){if(t instanceof TypeError){var n,r,i=Number.MIN_VALUE,s=e.length;for(r=0;r<s;r++)n=e[r],i=n>i?n:i;return i}}},s.minAnyArray=function(e){try{return Math.min.apply(Math,e)}catch(t){if(t instanceof TypeError){var n,r,i=Number.MAX_VALUE,s=e.length;for(r=0;r<s;r++)n=e[r],i=n<i?n:i;return i}}},s.average=function(e){var t,n=0,r=e.length;for(t=0;t<r;t++)n+=e[t];return n/r}}),t.define("/physics-solvers/heat-solver.js",function(e,t,n,r,i){var s=e("../arrays/arrays.js").arrays,o=5;n.makeHeatSolver=function(e){"use strict";var t=e.getGridWidth(),n=e.getGridHeight(),r=e.getModelOptions(),i=r.timestep,u=r.boundary,a=r.model_width/e.getGridWidth(),f=r.model_height/e.getGridHeight(),l=o,c=e.getConductivityArray(),h=e.getCapacityArray(),p=e.getDensityArray(),d=e.getUVelocityArray(),v=e.getVVelocityArray(),m=e.getBoundaryTemperatureArray(),g=e.getFluidityArray(),y=s.create(t*n,0,e.getArrayType()),b=t-1,w=n-1,E=t-2,S=n-2,x=function(e){var r,i,s,o,l,h,p,d;if(u.temperature_at_border){r=u.temperature_at_border.upper,i=u.temperature_at_border.lower,s=u.temperature_at_border.left,o=u.temperature_at_border.right;for(l=0;l<t;l+=1)p=l*t,e[p]=r,e[p+w]=i;for(h=0;h<n;h+=1)e[h]=s,e[b*t+h]=o}else{if(!u.flux_at_border)throw new Error("Heat solver: wrong boundary settings definition.");r=u.flux_at_border.upper,i=u.flux_at_border.lower,s=u.flux_at_border.left,o=u.flux_at_border.right;for(l=0;l<t;l+=1)p=l*t,d=p+w,e[p]=e[p+1]+r*f/c[p],e[d]=e[p+S]-i*f/c[d];for(h=0;h<n;h+=1)e[h]=e[t+h]-s*a/c[h],e[b*t+h]=e[E*t+h]+o*a/c[b*t+h]}},T=function(e){var n=.5*i/a,r=.5*i/f,s,o,u,l,c,h,p,m;for(s=1;s<b;s+=1){u=s*t;for(o=1;o<w;o+=1)l=u+o,h=l-t,c=l+t,m=l-1,p=l+1,g[l]&&(y[l]=e[l]-n*(d[c]*e[c]-d[h]*e[h])-r*(v[p]*e[p]-v[m]*e[m]))}x(y);for(s=1;s<b;s+=1){u=s*t;for(o=1;o<w;o+=1)l=u+o,g[l]&&(h=l-t,c=l+t,m=l-1,p=l+1,e[l]=.5*(e[l]+y[l])-.5*n*d[l]*(y[c]-y[h])-.5*r*v[l]*(y[p]-y[m]))}x(e)};return{solve:function(e,n,r){var o=.5/(a*a),u=.5/(f*f),d=1/i,v,g,E,S,N,C,k,L,A,O,M,_,D,P,H;s.copy(n,y);for(k=0;k<l;k+=1){for(L=1;L<b;L+=1){O=L*t;for(A=1;A<w;A+=1)M=O+A,isNaN(m[M])?(D=M-t,_=M+t,H=M-1,P=M+1,g=h[M]*p[M]*d,v=c[M],E=o*(v+c[D]),S=o*(v+c[_]),N=u*(v+c[H]),C=u*(v+c[P]),n[M]=(y[M]*g+r[M]+E*n[D]+S*n[_]+N*n[H]+C*n[P])/(g+E+S+N+C)):n[M]=m[M]}x(n)}e&&T(n)}}}}),t.define("/physics-solvers-gpu/heat-solver-gpu.js",function(t,n,r,i,s){var o=t("../arrays/arrays.js").arrays,u=10;r.makeHeatSolverGPU=function(t){"use strict";var n=energy2d.utils.gpu,r=energy2d.utils.gpu.gpgpu,i=e.glsl,s="src/lab/models/energy2d/engine/physics-solvers-gpu/heat-solver-glsl/",o=i[s+"basic.vs.glsl"],a=i[s+"solver.fs.glsl"],f=i[s+"force-flux-t.fs.glsl"],l=i[s+"force-flux-t.fs.glsl"],c=i[s+"t-to-t0.fs.glsl"],h=i[s+"maccormack-step1.fs.glsl"],p=i[s+"maccormack-step2.fs.glsl"],d=new n.Shader(o,a),v=new n.Shader(o,f),m=new n.Shader(o,l),g=new n.Shader(o,c),y=new n.Shader(o,h),b=new n.Shader(o,p),w=t.getGridWidth(),E=t.getGridHeight(),S=t.getModelOptions(),x=S.timestep,T=S.boundary,N=S.model_width/t.getGridWidth(),C=S.model_height/t.getGridHeight(),k=u,L=t.getSimulationTexture(0),A=t.getSimulationTexture(1),O=t.getSimulationTexture(2),M=[L,A,O],_=[L,A],D=[L],P=[1/E,1/w],H=function(){var e;e={data0_tex:0,data1_tex:1,grid:P,enforce_temp:0,hx:.5/(N*N),hy:.5/(C*C),inv_timestep:1/x},d.uniforms(e),e={data0_tex:0,data1_tex:1,data2_tex:2,grid:P,enforce_temp:0,tx:.5*x/N,ty:.5*x/C},y.uniforms(e),b.uniforms(e),T.temperature_at_border?(e={enforce_temp:1,vN:T.temperature_at_border.upper,vS:T.temperature_at_border.lower,vW:T.temperature_at_border.left,vE:T.temperature_at_border.right},d.uniforms(e),y.uniforms(e),b.uniforms(e)):T.flux_at_border&&(e={data0_tex:0,grid:P,vN:T.flux_at_border.upper,vS:T.flux_at_border.lower,vW:T.flux_at_border.left,vE:T.flux_at_border.right,delta_x:N,delta_y:C},v.uniforms(e),m.uniforms(e))},B=function(){r.executeProgram(y,M,L),T.flux_at_border&&r.executeProgram(m,D,L),r.executeProgram(b,M,L),T.flux_at_border&&r.executeProgram(v,D,L)},j={solve:function(e){var t;r.executeProgram(g,D,L);for(t=0;t<k;t+=1)r.executeProgram(d,_,L),T.flux_at_border&&r.executeProgram(v,D,L);e&&B(),r.tryFinish()}};return H(),j}}),t.define("/physics-solvers/fluid-solver.js",function(e,t,n,r,i){var s=e("../arrays/arrays.js").arrays,o=5,u=0,a=0,f=1;n.makeFluidSolver=function(e){"use strict";var t=e.getGridWidth(),n=e.getGridHeight(),r=e.getModelOptions(),i=r.timestep,l=r.thermal_buoyancy,c=r.buoyancy_approximation,h=r.background_viscosity,p=r.model_width/e.getGridWidth(),d=r.model_height/e.getGridHeight(),v=o,m=u,g=e.getTemperatureArray(),y=e.getFluidityArray(),b=e.getUWindArray(),w=e.getVWindArray(),E=e.getArrayType(),S=s.create(t*n,0,E),x=s.create(t*n,0,E),T=.5/p,N=.5/d,C=1/(p*p),k=1/(d*d),L=t-1,A=n-1,O=t-2,M=n-2,_=function(e,n){var r=e===1,i=e===2,s=L*t,o=O*t,u,a,f,l,c,h,p;for(u=1;u<L;u+=1)f=u*t,l=f+1,c=f+A,h=f+M,n[f]=i?-n[l]:n[l],n[c]=i?-n[h]:n[h];for(a=1;a<A;a+=1)p=t+a,n[a]=r?-n[p]:n[p],n[s+a]=r?-n[o+a]:n[o+a];n[0]=.5*(n[t]+n[1]),n[s]=.5*(n[o]+n[s+1]),n[A]=.5*(n[t+A]+n[M]),n[s+A]=.5*(n[o+A]+n[s+M])},D=function(e,n){var r=0,i,s,o,u,a,f,l,c,h,p;for(o=1;o<L;o+=1){a=o*t;for(u=1;u<A;u+=1)f=a+u,c=f-t,l=f+t,p=f-1,h=f+1,y[f]||(i=b[f],s=w[f],r=0,y[c]?(r+=1,e[f]=i-e[c],n[f]=s+n[c]):y[l]&&(r+=1,e[f]=i-e[l],n[f]=s+n[l]),y[p]?(r+=1,e[f]=i+e[p],n[f]=s-n[p]):y[h]&&(r+=1,e[f]=i+e[h],n[f]=s-n[h]),r===0&&(e[f]=i,n[f]=s))}},P=function(e){var n,r,i,s,o,u,a,f;for(n=1;n<L;n+=1){i=n*t;for(r=1;r<A;r+=1)s=i+r,y[s]||(u=s-t,o=s+t,f=s-1,a=s+1,y[u]?e[s]=e[u]:y[o]&&(e[s]=e[o]),y[f]?e[s]=e[f]:y[a]&&(e[s]=e[a]))}},H=function(e,r){var i=0,s=n,o=0,u,a;for(u=r-1;u>0;u-=1){a=e*t+u;if(!y[a]){i=u;break}}for(u=r+1;u<n;u+=1){a=e*t+u;if(!y[a]){s=u;break}}for(u=i;u<s;u+=1)a=e*t+u,o+=g[a];return o/(s-i)},B=function(e){var n=m*i,r=l*i,s,o,u,h,p;switch(c){case a:s=function(e){var t=0,n=e.length,r;for(r=0;r<n;r+=1)t+=e[r];return t/n}(g);for(o=1;o<L;o+=1){h=o*t;for(u=1;u<A;u+=1)p=h+u,y[p]&&(e[p]+=(n-r)*g[p]+r*s)}break;case f:for(o=1;o<L;o+=1){h=o*t;for(u=1;u<A;u+=1)p=h+u,y[p]&&(s=H(o,u),e[p]+=(n-r)*g[p]+r*s)}}},j=function(e,n,r,i){var s=.5/(C+k),o,u,a,f,l,c,h,p,d;for(u=1;u<L;u+=1){f=u*t;for(a=1;a<A;a+=1)l=f+a,y[l]&&(h=l-t,c=l+t,d=l-1,p=l+1,i[l]=(e[c]-e[h])*T+(n[p]-n[d])*N,r[l]=0)}_(0,i),_(0,r),P(i),P(r);for(o=0;o<v;o+=1)for(u=1;u<L;u+=1){f=u*t;for(a=1;a<A;a+=1)l=f+a,y[l]&&(h=l-t,c=l+t,d=l-1,p=l+1,r[l]=s*((r[h]+r[c])*C+(r[d]+r[p])*k-i[l]))}for(u=1;u<L;u+=1){f=u*t;for(a=1;a<A;a+=1)l=f+a,y[l]&&(h=l-t,c=l+t,d=l-1,p=l+1,e[l]-=(r[c]-r[h])*T,n[l]-=(r[p]-r[d])*N)}_(1,e),_(2,n)},F=function(e,n,r){var o=i*h*C,u=i*h*k,a=1/(1+2*(o+u)),f,l,c,p,d,m,g,b,w;s.copy(r,n);for(f=0;f<v;f+=1){for(l=1;l<L;l+=1){p=l*t;for(c=1;c<A;c+=1)d=p+c,y[d]&&(g=d-t,m=d+t,w=d-1,b=d+1,r[d]=(n[d]+o*(r[g]+r[m])+u*(r[w]+r[b]))*a)}_(e,r)}},I=function(e,n,r){var o=.5*i/p,u=.5*i/d,a,f,l,c,h,v,m,g;for(a=1;a<L;a+=1){l=a*t;for(f=1;f<A;f+=1)c=l+f,y[c]&&(v=c-t,h=c+t,g=c-1,m=c+1,r[c]=n[c]-o*(S[h]*n[h]-S[v]*n[v])-u*(x[m]*n[m]-x[g]*n[g]))}_(e,r);for(a=1;a<L;a+=1){l=a*t;for(f=1;f<A;f+=1)c=l+f,y[c]&&(v=c-t,h=c+t,g=c-1,m=c+1,n[c]=.5*(n[c]+r[c])-.5*o*S[c]*(r[h]-r[v])-.5*u*x[c]*(r[m]-r[g]))}s.copy(n,r),_(e,r)},q=function(e,t,n){I(e,t,n)};return{solve:function(e,t){l!==0&&B(t),D(e,t),h>0&&(F(1,S,e),F(2,x,t),j(e,t,S,x),D(e,t)),s.copy(e,S),s.copy(t,x),q(1,S,e),q(2,x,t),j(e,t,S,x),D(e,t)}}}}),t.define("/physics-solvers-gpu/fluid-solver-gpu.js",function(t,n,r,i,s){var o=t("../arrays/arrays.js").arrays,u=10,a=0,f=0,l=1;r.makeFluidSolverGPU=function(t){"use strict";var n=energy2d.utils.gpu,r=energy2d.utils.gpu.gpgpu,i=e.glsl,s="src/lab/models/energy2d/engine/physics-solvers-gpu/fluid-solver-glsl/",o=i[s+"basic.vs.glsl"],f=i[s+"maccormack-step1.fs.glsl"],l=i[s+"maccormack-step2.fs.glsl"],c=i[s+"apply-uv-boundary.fs.glsl"],h=i[s+"apply-u0v0-boundary.fs.glsl"],p=i[s+"set-obstacle-boundary.fs.glsl"],d=i[s+"set-obstacle-velocity.fs.glsl"],v=i[s+"uv-to-u0v0.fs.glsl"],m=i[s+"conserve-step1.fs.glsl"],g=i[s+"conserve-step2.fs.glsl"],y=i[s+"conserve-step3.fs.glsl"],b=i[s+"diffuse.fs.glsl"],w=i[s+"apply-buoyancy.fs.glsl"],E=new n.Shader(o,f),S=new n.Shader(o,l),x=new n.Shader(o,c),T=new n.Shader(o,h),N=new n.Shader(o,p),C=new n.Shader(o,d),k=new n.Shader(o,v),L=new n.Shader(o,m),A=new n.Shader(o,g),O=new n.Shader(o,y),M=new n.Shader(o,b),_=new n.Shader(o,w),D=t.getSimulationTexture(0),P=t.getSimulationTexture(1),H=t.getSimulationTexture(2),B=t.getSimulationTexture(3),j=t.getGridWidth(),F=t.getGridHeight(),I=t.getModelOptions(),q=I.timestep,R=I.thermal_buoyancy,U=I.buoyancy_approximation,z=I.background_viscosity,W=I.model_width/t.getGridWidth(),X=I.model_height/t.getGridHeight(),V=u,$=a,J=.5/W,K=.5/X,Q=1/(W*W),G=1/(X*X),Y=.5/(Q+G),Z=q*z*Q,et=q*z*G,tt=1/(1+2*(Z+et)),nt=$*q,rt=R*q,it=[1/F,1/j],st=[H],ot=[P,H],ut=[D,P,H],at=[P,H,B],ft=function(){var e;e={data1_tex:0,data2_tex:1,grid:it,tx:.5*q/W,ty:.5*q/X},E.uniforms(e),S.uniforms(e),e={data2_tex:0,grid:it},x.uniforms(e),T.uniforms(e),e={data1_tex:0,data2_tex:1,grid:it},N.uniforms(e),e={data1_tex:0,data2_tex:1,data3_tex:2,grid:it},C.uniforms(e),e={data1_tex:0,data2_tex:1,grid:it,i2dx:J,i2dy:K},L.uniforms(e),O.uniforms(e),e={data1_tex:0,data2_tex:1,grid:it,s:Y,idxsq:Q,idysq:G},A.uniforms(e),e={data1_tex:0,data2_tex:1,grid:it,hx:Z,hy:et,dn:tt},M.uniforms(e),e={data0_tex:0,data1_tex:1,data2_tex:2,grid:it,g:nt,b:rt},_.uniforms(e)},lt=function(){r.executeProgram(_,ut,H)},ct=function(){r.executeProgram(E,ot,H),r.executeProgram(x,st,H),r.executeProgram(S,ot,H),r.executeProgram(x,st,H)},ht=function(){var e;r.executeProgram(L,ot,H),r.executeProgram(T,st,H),r.executeProgram(N,ot,H);for(e=0;e<V;e+=1)r.executeProgram(A,ot,H);r.executeProgram(O,ot,H),r.executeProgram(x,st,H)},pt=function(){var e;r.executeProgram(k,st,H);for(e=0;e<V;e+=1)r.executeProgram(M,ot,H),r.executeProgram(x,st,H)},dt=function(){r.executeProgram(C,at,H)},vt=function(){r.executeProgram(k,st,H)},mt={solve:function(){R!==0&&lt(),dt(),z>0&&(pt(),ht(),dt()),vt(),ct(),ht(),dt(),r.tryFinish()}};return ft(),mt}}),t.define("/physics-solvers/ray-solver.js",function(e,t,n,r,i){var s=e("../arrays/arrays.js").arrays,o=e("../photon.js").Photon;n.makeRaySolver=function(e){"use strict";var t=e.getGridWidth(),n=e.getGridHeight(),r=e.getModelOptions(),i=r.model_width,s=r.model_height,u=r.timestep,a=Math.PI-r.sun_angle,f=r.solar_ray_count,l=r.solar_power_density,c=r.solar_power_density,h=r.solar_ray_speed,p=r.photon_emission_interval,d=r.model_width/e.getGridWidth(),v=r.model_height/e.getGridHeight(),m=e.getPowerArray(),g=e.getPartsArray(),y=e.getPhotonsArray(),b=t-1,w=n-1,E=t-2,S=n-2,x=function(){var e=0;while(e<y.length)y[e]===undefined?y.splice(e,1):e+=1},T=function(){var e,t,n;for(e=0,t=y.length;e<t;e+=1)y[e].isContained(0,i,0,s)||(y[e]=undefined);x()},N=function(e,t){var n,r,i;for(n=0,r=g.length;n<r;n+=1)if(g[n].contains(e,t))return!0;return!1},C=function(e,t){var n=Math.floor(i/e),r=Math.floor(s/t),u,f,l;if(a>=0&&a<.5*Math.PI){f=0;for(l=1;l<=n;l+=1)u=e*l,N(u,f)||y.push(new o(u,f,c,h,a));u=0;for(l=0;l<=r;l+=1)f=t*l,N(u,f)||y.push(new o(u,f,c,h,a))}else if(a<0&&a>=-0.5*Math.PI){f=s;for(l=1;l<=n;l+=1)u=e*l,N(u,f)||y.push(new o(u,f,c,h,a));u=0;for(l=0;l<=r;l+=1)f=s-t*l,N(u,f)||y.push(new o(u,f,c,h,a))}else if(a<Math.PI+.001&&a>=.5*Math.PI){f=0;for(l=0;l<=n;l+=1)u=i-e*l,N(u,f)||y.push(new o(u,f,c,h,a));u=i;for(l=1;l<=r;l+=1)f=t*l,N(u,f)||y.push(new o(u,f,c,h,a))}else if(a>=-Math.PI&&a<-0.5*Math.PI){f=s;for(l=0;l<=n;l+=1)u=i-e*l,N(u,f)||y.push(new o(u,f,c,h,a));u=i;for(l=1;l<=r;l+=1)f=s-t*l,N(u,f)||y.push(new o(u,f,c,h,a))}};return{solve:function(){var e=1/(u*p),t=1/d,r=1/v,i,s,o,a,f,l,c,h;for(f=0,c=y.length;f<c;f+=1){i=y[f],i.move(u);for(l=0,h=g.length;l<h;l+=1){s=g[l];if(s.reflect(i,u))break;if(s.absorb(i)){o=Math.max(Math.min(Math.round(i.x*t),b),0),a=Math.max(Math.min(Math.round(i.y*r),w),0),m[o*n+a]=i.energy*e,y[f]=undefined;break}}}x(),T()},radiate:function(){var t,n,r;for(n=0,r=g.length;n<r;n+=1)t=g[n],t.emissivity>0&&t.radiate(e)},sunShine:function(){var e,t,n;if(a<0)return;e=Math.abs(Math.sin(a)),t=Math.abs(Math.cos(a)),n=e*s<t*i?s/t:i/e,n/=f,C(n/e,n/t)}}}}),t.define("/photon.js",function(e,t,n,r,i){var s=e("./utils/math.js").hypot,o=e("./utils/shape.js").Line,u=e("./utils/shape.js").Rectangle,a=n.Photon=function(e,t,n,r,i){"use strict";this.x=e,this.y=t,this.energy=n,this.c=r,i!==undefined&&(this.vx=Math.cos(i)*r,this.vy=Math.sin(i)*r)};a.prototype.isContained=function(e,t,n,r){"use strict";return this.x>=e&&this.x<=t&&this.y>=n&&this.y<=r},a.prototype.move=function(e){"use strict";this.x+=this.vx*e,this.y+=this.vy*e},a.prototype.reflectFromLine=function(e,t){"use strict";var n=this.x,r=this.y,i=this.x-this.vx*t,u=this.y-this.vy*t,a=new o(n,r,i,u),f=this.vx,l=this.vy,c,h,p,d,v;return a.intersectsLine(e)?(n=e.x1,r=e.y1,i=e.x2,u=e.y2,c=1/s(n-i,r-u),h=(u-r)*c,p=(i-n)*c,d=f*p+l*h,v=l*p-f*h,this.vx=d*p+v*h,this.vy=d*h-v*p,!0):!1},a.prototype.reflectFromRectangle=function(e,t){"use strict";var n=e.x,r=e.y,i=e.x+e.width,s=e.y+e.height,o,u;o=this.vx*t,this.x-o<n?this.vx=-Math.abs(this.vx):this.x-o>i&&(this.vx=Math.abs(this.vx)),u=this.vy*t,this.y-u<r?this.vy=-Math.abs(this.vy):this.y-u>s&&(this.vy=Math.abs(this.vy))},a.prototype.reflectFromPolygon=function(e,t){"use strict";var n=new o,r,i;for(r=0,i=e.count-1;r<i;r+=1){n.x1=e.x_coords[r],n.y1=e.y_coords[r],n.x2=e.x_coords[r+1],n.y2=e.y_coords[r+1];if(this.reflectFromLine(n,t))return}n.x1=e.x_coords[e.count-1],n.y1=e.y_coords[e.count-1],n.x2=e.x_coords[0],n.y2=e.y_coords[0],this.reflectFromLine(n,t)},a.prototype.reflect=function(e,t){"use strict";return e.contains(this.x,this.y)?(e instanceof u?this.reflectFromRectangle(e,t):this.reflectFromPolygon(e.polygonize(),t),!0):!1}}),t.define("/utils/math.js",function(e,t,n,r,i){n.hypot=function(e,t){"use strict";var n;return e=Math.abs(e),t=Math.abs(t),n=Math.min(e,t),e=Math.max(e,t),t=n,e*Math.sqrt(1+t/e*(t/e))}}),t.define("/utils/shape.js",function(e,t,n,r,i){n.pointInsidePolygon=function(e,t,n,r,i){"use strict";var s=0,o,u;for(o=0,u=e-1;o<e;u=o,o+=1)n[o]>i!=n[u]>i&&r<(t[u]-t[o])*(i-n[o])/(n[u]-n[o])+t[o]&&(s=!s);return!!s};var s=n.Line=function(e,t,n,r){"use strict";this.x1=e,this.y1=t,this.x2=n,this.y2=r};s.prototype.intersectsLine=function(e){"use strict";var t,n={x:this.x1,y:this.y1},r={x:this.x2,y:this.y2},i={x:e.x1,y:e.y1},s={x:e.x2,y:e.y2},o=(s.x-i.x)*(n.y-i.y)-(s.y-i.y)*(n.x-i.x),u=(r.x-n.x)*(n.y-i.y)-(r.y-n.y)*(n.x-i.x),a=(s.y-i.y)*(r.x-n.x)-(s.x-i.x)*(r.y-n.y),f,l;return a!==0?(f=o/a,l=u/a,0<=f&&f<=1&&0<=l&&l<=1?t=!0:t=!1):o===0||u===0?t=!0:t=!1,t};var o=n.Polygon=function(e,t,n){"use strict";this.count=e,this.x_coords=t,this.y_coords=n};o.prototype.polygonize=function(){"use strict";return this},o.prototype.contains=function(e,t){"use strict";var n=this.x_coords,r=this.y_coords,i=this.count,s=0,o,u;for(o=0,u=i-1;o<i;u=o,o+=1)r[o]>t!=r[u]>t&&e<(n[u]-n[o])*(t-r[o])/(r[u]-r[o])+n[o]&&(s=!s);return!!s};var u=n.Rectangle=function(e,t,n,r){"use strict";this.x=e,this.y=t,this.width=n,this.height=r,this.polygon_cache=undefined};u.prototype.polygonize=function(){"use strict";var e,t,n,r;return this.polygon_cache||(e=this.x,t=this.y,n=this.width,r=this.height,this.polygon_cache=new o(4,[e,e+n,e+n,e],[t,t,t+r,t+r])),this.polygon_cache},u.prototype.contains=function(e,t){"use strict";return e>=this.x&&e<=this.x+this.width&&t>=this.y&&t<=this.y+this.height};var a=function(e,t,n,r,i){"use strict";var s=new Array(i),u=new Array(i),a=2*Math.PI/i,f,l;for(l=0;l<i;l+=1)f=a*l,s[l]=e+n*Math.cos(f),u[l]=t+r*Math.sin(f);return new o(i,s,u)},f=n.Ellipse=function(e,t,n,r){"use strict";this.x=e,this.y=t,this.a=n,this.b=r,this.polygon_cache=undefined};f.prototype.POLYGON_SEGMENTS=50,f.prototype.polygonize=function(){"use strict";return this.polygon_cache||(this.polygon_cache=a(this.x,this.y,this.a*.5,this.b*.5,this.POLYGON_SEGMENTS)),this.polygon_cache},f.prototype.contains=function(e,t){"use strict";var n=e-this.x,r=t-this.y,i=this.a*.5,s=this.b*.5;return n*n/(i*i)+r*r/(s*s)<=1};var l=n.Ring=function(e,t,n,r){"use strict";this.x=e,this.y=t,this.inner=n,this.outer=r,this.polygon_cache=undefined};l.prototype.POLYGON_SEGMENTS=50,l.prototype.polygonize=function(){"use strict";return this.polygon_cache||(this.polygon_cache=a(this.x,this.y,this.outer*.5,this.outer*.5,this.POLYGON_SEGMENTS)),this.polygon_cache},l.prototype.polygonizeInner=function(){"use strict";var e,t,n,r,i,s,o,u,f,l;return this.polygon_cache_inner||(this.polygon_cache_inner=a(this.x,this.y,this.inner*.5,this.inner*.5,this.POLYGON_SEGMENTS)),this.polygon_cache_inner},l.prototype.contains=function(e,t){"use strict";var n=e-this.x,r=t-this.y,i=this.outer*.5,s=this.outer*.5,o=this.inner*.5,u=this.inner*.5;return n*n/(i*i)+r*r/(s*s)<=1&&n*n/(o*o)+r*r/(u*u)>=1}}),t.define("/part.js",function(e,t,n,r,i){var s=e("./default-config.js"),o=e("./constants.js"),u=e("./photon.js").Photon,a=e("./utils/math.js").hypot,f=e("./utils/shape.js"),l=e("./utils/shape.js").Line,c=e("./utils/shape.js").Polygon,h=e("./utils/shape.js").Rectangle,p=e("./utils/shape.js").Ellipse,d=e("./utils/shape.js").Ring,v=.5,m=20,g=100,y=Math.sin(Math.PI/6),b=Math.cos(Math.PI/6),w=Math.sin(Math.PI/3),E=Math.cos(Math.PI/3),S=n.Part=function(e){"use strict";var t,n,r;e=s.fillWithDefaultValues(e,s.DEFAULT_VALUES.part);if(e.rectangle)r=this.rectangle=e.rectangle,this.shape=new h(r.x,r.y,r.width,r.height);else if(e.ellipse)r=this.ellipse=e.ellipse,this.shape=new p(r.x,r.y,r.a,r.b);else if(e.ring)r=this.ring=e.ring,this.shape=new d(r.x,r.y,r.inner,r.outer);else{if(!e.polygon)throw new Error("Part: shape not defined.");this.polygon=e.polygon;if(typeof this.polygon.vertices=="string"){t=this.polygon.count,this.polygon.vertices=this.polygon.vertices.split(", "),this.polygon.x_coords=[],this.polygon.y_coords=[];if(t*2!==this.polygon.vertices.length)throw new Error("Part: polygon contains different vertices count than declared in the count parameter.");for(n=0;n<t;n+=1)this.polygon.x_coords[n]=this.polygon.vertices[2*n]=Number(this.polygon.vertices[2*n]),this.polygon.y_coords[n]=this.polygon.vertices[2*n+1]=Number(this.polygon.vertices[2*n+1]);this.shape=new c(t,this.polygon.x_coords,this.polygon.y_coords)}}this.thermal_conductivity=e.thermal_conductivity,this.specific_heat=e.specific_heat,this.density=e.density,this.temperature=e.temperature,this.constant_temperature=e.constant_temperature,this.power=e.power,this.wind_speed=e.wind_speed,this.wind_angle=e.wind_angle,this.transmission=e.transmission,this.reflection=e.reflection,this.absorption=e.absorption,this.emissivity=e.emissivity,this.visible=e.visible,this.filled=e.filled,this.color=e.color,this.texture=e.texture,this.label=e.label};S.prototype.getLabel=function(){"use strict";var e=this.label,t;return e==="%temperature"?t=this.temperature+" °C":e==="%density"?t=this.density+" kg/m³":e==="%specific_heat"?t=this.specific_heat+" J/(kg×°C)":e==="%thermal_conductivity"?t=this.thermal_conductivity+" W/(m×°C)":e==="%power_density"?t=this.power+" W/m³":e==="%area"?this.rectangle?t=this.rectangle.width*this.rectangle.height+" m²":this.ellipse&&(t=this.ellipse.width*this.ellipse.height*.25*Math.PI+" m²"):e==="%width"?this.rectangle?t=this.rectangle.width+" m":this.ellipse&&(t=this.ellipse.width+" m"):e==="%height"?this.rectangle?t=this.rectangle.height+" m":this.ellipse&&(t=this.ellipse.height+" m"):t=e,t},S.prototype.getGridCells=function(e,t,n,r){"use strict";var i=e-1,s=t-1,o=i/n,u=s/r,a=function(e){var n,r,a,f,l,c,h,p=[];a=Math.min(Math.max(Math.ceil(e.x*o),0),i),f=Math.min(Math.max(Math.ceil(e.y*u),0),s),l=Math.min(Math.max(Math.floor((e.x+e.width)*o),0),i),c=Math.min(Math.max(Math.floor((e.y+e.height)*u),0),s),p=new Array((l-a+1)*(c-f+1)),h=0;for(n=a;n<=l;n+=1)for(r=f;r<=c;r+=1)p[h+=1]=n*t+r;return p},l=function(e){var n=e.x*o,r=e.y*u,a=e.a*.5*o,f=e.b*.5*u,l,c,h,p,d,v,m,g,y=[];h=Math.min(Math.max(Math.ceil(n-a),0),i),p=Math.min(Math.max(Math.floor(n+a),0),i),y=[],g=0;for(c=h;c<=p;c+=1){l=Math.sqrt(1-(c-n)*(c-n)/(a*a)),v=Math.min(Math.max(Math.ceil(r-f*l),0),s),m=Math.min(Math.max(Math.floor(r+f*l),0),s);for(d=v;d<=m;d+=1)y[g+=1]=c*t+d}return y},c=function(e){var n=e.x*o,r=e.y*u,a=e.outer*.5*o,f=e.outer*.5*u,l=e.inner*.5*o,c=e.inner*.5*u,h,p,d,v,m,g,y,b,w,E,S=[];p=Math.min(Math.max(Math.ceil(n-a),0),i),d=Math.min(Math.max(Math.floor(n+a),0),i);for(h=p;h<=d;h+=1){w=Math.sqrt(1-(h-n)*(h-n)/(a*a)),m=Math.min(Math.max(Math.ceil(r-f*w),0),s),b=Math.min(Math.max(Math.floor(r+f*w),0),s);if(Math.abs(h-n)<l){w=Math.sqrt(1-(h-n)*(h-n)/(l*l)),g=Math.min(Math.max(Math.ceil(r-c*w),0),s),y=Math.min(Math.max(Math.floor(r+c*w),0),s);for(v=m;v<=g;v+=1)S[E+=1]=h*t+v;for(v=y;v<=b;v+=1)S[E+=1]=h*t+v}else for(v=m;v<=b;v+=1)S[E+=1]=h*t+v}return S},h=function(e){var n=e.count,r=e.vertices,a=new Array(n),l=new Array(n),c=Number.MAX_VALUE,h=Number.MIN_VALUE,p=Number.MAX_VALUE,d=Number.MIN_VALUE,v,m,g,y,b,w,E,S=[];for(v=0;v<n;v+=1)a[v]=r[v*2]*o,l[v]=r[v*2+1]*u,a[v]<c&&(c=a[v]),a[v]>h&&(h=a[v]),l[v]<p&&(p=l[v]),l[v]>d&&(d=l[v]);m=Math.min(Math.max(Math.round(c),0),i),b=Math.min(Math.max(Math.round(p),0),s),g=Math.min(Math.max(Math.round(h),0),i),w=Math.min(Math.max(Math.round(d),0),s),S=[],E=0;for(v=m;v<=g;v+=1)for(y=b;y<=w;y+=1)f.pointInsidePolygon(n,a,l,v,y)&&(S[E+=1]=v*t+y);return S};if(this.rectangle)return a(this.rectangle);if(this.ellipse)return l(this.ellipse);if(this.ring)return c(this.ring);if(this.polygon)return h(this.polygon);throw new Error("Part: unknown shape.")},S.prototype.contains=function(e,t){"use strict";return this.shape.contains(e,t)},S.prototype.reflect=function(e,t){"use strict";return Math.abs(this.reflection-1)<.001?e.reflect(this.shape,t):!1},S.prototype.absorb=function(e){"use strict";return Math.abs(this.absorption-1)<.001?this.shape.contains(e.x,e.y):!1},S.prototype.getIrradiance=function(e){"use strict";var t;return this.emissivity===0?0:(t=273+e,t*=t,this.emissivity*o.STEFAN_CONSTANT*g*t*t)},S.prototype.radiate=function(e){"use strict";var t=this.shape.polygonize(),n=new l,r,i;if(this.emissivity===0)return;for(r=0,i=t.count-1;r<i;r+=1)n.x1=t.x_coords[r],n.y1=t.y_coords[r],n.x2=t.x_coords[r+1],n.y2=t.y_coords[r+1],this.radiateFromLine(e,n);n.x1=t.x_coords[t.count-1],n.y1=t.y_coords[t.count-1],n.x2=t.x_coords[0],n.y2=t.y_coords[0],this.radiateFromLine(e,n)},S.prototype.radiateFromLine=function(e,t){"use strict";var n,r,i,s,o,f,l,c,h,p,d,g,S,x,T,N,C;if(this.emissivity===0)return;n=e.getModelOptions(),r=a(t.x1-t.x2,t.y1-t.y2),i=(t.x2-t.x1)/r,s=(t.y2-t.y1)/r,o=Math.max(1,Math.round(r/v)),p=n.solar_ray_speed*s,d=-n.solar_ray_speed*i;if(o===1)h=.5*r,f=t.x1+h*i,l=t.y1+h*s,h=e.getAverageTemperatureAt(f,l),h>m&&(h=e.getTemperatureAt(f,l),c=new u(f,l,this.getIrradiance(h),n.solar_ray_speed),c.vx=p,c.vy=d,e.addPhoton(c),this.constant_temperature||e.setTemperatureAt(f,l,h-c.energy/this.specific_heat));else{g=new Array(4),S=new Array(4),g[0]=p*b-d*y,S[0]=p*y+d*b,g[1]=d*y+p*b,S[1]=d*b-p*y,g[2]=p*E-d*w,S[2]=p*w+d*E,g[3]=d*w+p*E,S[3]=d*E-p*w,x=1+g.length;for(N=0;N<o;N+=1){h=(N+.5)*v,f=t.x1+h*i,l=t.y1+h*s,h=e.getAverageTemperatureAt(f,l),T=this.getIrradiance(h)/x;if(h>m){c=new u(f,l,T,n.solar_ray_speed),c.vx=p,c.vy=d,e.addPhoton(c);for(C=0;C<x-1;C+=1)c=new u(f,l,T,n.solar_ray_speed),c.vx=g[C],c.vy=S[C],e.addPhoton(c);this.constant_temperature||e.changeAverageTemperatureAt(f,l,-T*x/this.specific_heat)}}}}}),t.define("/default-config.js",function(e,t,n,r,i){var s=e("./constants.js");n.DEFAULT_VALUES={model:{use_WebGL:!1,grid_width:100,grid_height:100,model_width:10,model_height:10,timestep:1,convective:!0,background_temperature:0,background_conductivity:s.AIR_THERMAL_CONDUCTIVITY,background_specific_heat:s.AIR_SPECIFIC_HEAT,background_density:s.AIR_DENSITY,background_viscosity:s.AIR_VISCOSITY,thermal_buoyancy:25e-5,buoyancy_approximation:1,boundary:{temperature_at_border:{upper:0,lower:0,left:0,right:0}},measurement_interval:500,viewupdate_interval:100,stoptime:undefined,sunny:!1,sun_angle:1.5707964,solar_power_density:2e3,solar_ray_count:24,solar_ray_speed:.1,photon_emission_interval:20,structure:undefined},part:{thermal_conductivity:1,specific_heat:1300,density:25,transmission:0,reflection:0,absorption:1,emissivity:0,temperature:0,constant_temperature:!1,power:0,wind_speed:0,wind_angle:0,visible:!0,filled:!0,color:"gray",label:undefined,texture:undefined,uid:undefined,draggable:!0}},n.fillWithDefaultValues=function(e,t){"use strict";var n,r,i=function(e){return e===undefined?undefined:JSON.parse(JSON.stringify(e))};if(e===undefined)return i(t);r=i(e);for(n in t)t.hasOwnProperty(n)&&e[n]===undefined&&(r[n]=i(t[n]));return r}}),t.define("/constants.js",function(e,t,n,r,i){n.AIR_THERMAL_CONDUCTIVITY=.025,n.AIR_SPECIFIC_HEAT=1012,n.AIR_DENSITY=1.204,n.AIR_VISCOSITY=1568e-8,n.STEFAN_CONSTANT=5.67e-8}),t.define("/core-model.js",function(e,t,n,r,i){var s=e("./arrays/arrays.js").arrays,o=e("./physics-solvers/heat-solver.js"),u=e("./physics-solvers-gpu/heat-solver-gpu.js"),a=e("./physics-solvers/fluid-solver.js"),f=e("./physics-solvers-gpu/fluid-solver-gpu.js"),l=e("./physics-solvers/ray-solver.js"),c=e("./part.js"),h=e("./default-config.js"),p,d=function(){"use strict";try{new Float32Array}catch(e){return"regular"}return"Float32Array"}();n.makeCoreModel=function(e){"use strict";var t=function(){var t;e=h.fillWithDefaultValues(e,h.DEFAULT_VALUES.model),t=e.boundary.temperature_at_border||e.boundary.flux_at_border;if(!t)throw new Error("Core model: missing boundary settings.");if(t.upper===undefined||t.right===undefined||t.lower===undefined||t.left===undefined)throw new Error("Core model: incomplete boundary settings.");return e}(),n=t.use_WebGL,r,i=t.grid_width,v=t.grid_height,m=i*v,g=t.model_width/i,y=t.model_height/v,b=0,w,E,S,x,T,N,C,k={start:function(){},stop:function(){},startFPS:function(){},updateFPS:function(){},stopFPS:function(){}},L=s.create(m,t.background_temperature,d),A=s.create(m,NaN,d),O=s.create(m,0,d),M=s.create(m,0,d),_=s.create(m,0,d),D=s.create(m,0,d),P=s.create(m,0,d),H=s.create(m,t.background_conductivity,d),B=s.create(m,t.background_specific_heat,d),j=s.create(m,t.background_density,d),F=s.create(m,!0,d),I=[],q=[],R=function(){var e=[],n,r,i;if(t.structure&&t.structure.part){n=t.structure.part,n.constructor!==Array&&(n=[n]),e=new Array(n.length);for(r=0,i=n.length;r<i;r+=1)e[r]=new c.Part(n[r])}return e}(),U=function(){if(typeof window=="undefined")throw new Error("Core model: WebGL GPGPU unavailable in the node.js environment.");p=energy2d.utils.gpu.gpgpu;try{p.init(v,i)}catch(e){n=!1,r=e.message,console.warn("WebGL initialization failed. Energy2D will use CPU solvers.");return}q[0]=p.createTexture(),q[1]=p.createTexture(),q[2]=p.createTexture(),q[3]=p.createTexture(),p.writeRGBATexture(q[0],L,L,A,H),p.writeRGBATexture(q[1],_,B,j,F),p.writeRGBATexture(q[2],O,M,O,M),p.writeRGBATexture(q[3],D,P,D,P),x=u.makeHeatSolverGPU(X),T=f.makeFluidSolverGPU(X)},z=function(){var e=t.model_width,n=t.model_height,r,s,o,u,a,f;if(!R||R.length===0)return;for(u=R.length-1;u>=0;u-=1){r=R[u],s=r.getGridCells(i,v,e,n);for(a=0,f=s.length;a<f;a+=1)o=s[a],F[o]=!1,L[o]=r.temperature,_[o]=r.power,H[o]=r.thermal_conductivity,B[o]=r.specific_heat,j[o]=r.density,r.wind_speed!==0&&(D[o]=r.wind_speed*Math.cos(r.wind_angle),P[o]=r.wind_speed*Math.sin(r.wind_angle)),r.constant_temperature&&(A[o]=r.temperature)}},W=function(){var e,t,n,r,s,o,u,a;for(r=0;r<i;r+=1){t=r*g,s=r*v;for(o=0;o<v;o+=1){n=o*y,_[s+o]=0;if(C)for(u=0,a=R.length;u<a;u+=1){e=R[u];if(e.power!==0&&e.shape.contains(t,n)){_[s+o]=e.getPower();break}}}}},X={nextStep:function(){k.start("Core model step"),n?(t.convective&&(k.start("Fluid solver GPU"),T.solve(),k.stop("Fluid solver GPU")),k.start("Heat solver GPU"),x.solve(t.convective),k.stop("Heat solver GPU")):(N&&(k.start("Ray solver CPU"),b%t.photon_emission_interval===0&&(W(),t.sunny&&S.sunShine(),S.radiate()),S.solve(),k.stop("Ray solver CPU")),t.convective&&(k.start("Fluid solver CPU"),E.solve(O,M),k.stop("Fluid solver CPU")),k.start("Heat solver CPU"),w.solve(t.convective,L,_),k.stop("Heat solver CPU")),b+=1,k.stop("Core model step")},setPerformanceTools:function(e){k=e},isWebGLActive:function(){return n},getWebGLError:function(){return r},updateTemperatureArray:function(){n&&(k.start("Read temperature texture"),p.readTexture(q[0],L),k.stop("Read temperature texture"))},updateVelocityArrays:function(){n&&(k.start("Read velocity texture"),p.readTexture(q[2],O,0),p.readTexture(q[2],M,1),k.stop("Read velocity texture"))},getIndexOfStep:function(){return b},getModelOptions:function(){return t},getTemperatureAt:function(e,t){var n=Math.max(Math.min(i-1,Math.round(e/g)),0),r=Math.max(Math.min(v-1,Math.round(t/y)),0);return L[n*v+r]},setTemperatureAt:function(e,t,n){var r=Math.max(Math.min(i-1,Math.round(e/g)),0),s=Math.max(Math.min(v-1,Math.round(t/y)),0);L[r*v+s]=n},getAverageTemperatureAt:function(e,t){var n=0,r=i-1,s=v-1,o=Math.round(e/g),u=Math.round(t/y),a,f;return a=Math.max(Math.min(r,o),0),f=Math.max(Math.min(s,u),0),n+=L[a*v+f],a=Math.max(Math.min(r,o+1),0),f=Math.max(Math.min(s,u),0),n+=L[a*v+f],a=Math.max(Math.min(r,o-1),0),f=Math.max(Math.min(s,u),0),n+=L[a*v+f],a=Math.max(Math.min(r,o),0),f=Math.max(Math.min(s,u+1),0),n+=L[a*v+f],a=Math.max(Math.min(r,o),0),f=Math.max(Math.min(s,u-1),0),n+=L[a*v+f],n*.2},changeAverageTemperatureAt:function(e,t,n){var r=i-1,s=v-1,o=Math.round(e/g),u=Math.round(t/y),a,f;n*=.2,a=Math.min(r,o),f=Math.min(s,u),a>=0&&f>=0&&(L[a*v+f]+=n),a=Math.min(r,o+1),f=Math.min(s,u),a>=0&&f>=0&&(L[a*v+f]+=n),a=Math.min(r,o-1),f=Math.min(s,u),a>=0&&f>=0&&(L[a*v+f]+=n),a=Math.min(r,o),f=Math.min(s,u+1),a>=0&&f>=0&&(L[a*v+f]+=n),a=Math.min(r,o),f=Math.min(s,u-1),a>=0&&f>=0&&(L[a*v+f]+=n)},addPhoton:function(e){I.push(e)},removePhoton:function(e){var t=I.indexOf(e);t!==-1&&I.splice(t,1)},copyTextureToArray:function(e,t){p.readTexture(e,t)},copyArrayToTexture:function(e,t){p.writeTexture(t,e)},getArrayType:function(){return d},getGridWidth:function(){return i},getGridHeight:function(){return v},getPerformanceModel:function(){return k},getTemperatureArray:function(){return L},getUVelocityArray:function(){return O},getVVelocityArray:function(){return M},getUWindArray:function(){return D},getVWindArray:function(){return P},getBoundaryTemperatureArray:function(){return A},getPowerArray:function(){return _},getConductivityArray:function(){return H},getCapacityArray:function(){return B},getDensityArray:function(){return j},getFluidityArray:function(){return F},getPhotonsArray:function(){return I},getPartsArray:function(){return R},getTemperatureTexture:function(){return q[0]},getVelocityTexture:function(){return q[2]},getSimulationTexture:function(e){return q[e]}};return N=function(){var e,n;if(t.sunny)return!0;for(e=0,n=R.length;e<n;e+=1)if(R[e].emissivity>0)return!0;return!1}(),C=function(){var e,t;for(e=0,t=R.length;e<t;e+=1)if(
R[e].power>0)return!0;return!1}(),z(),w=o.makeHeatSolver(X),E=a.makeFluidSolver(X),S=l.makeRaySolver(X),n&&U(),X}}),t("/core-model.js");var n=t("./core-model.js");energy2d.namespace("energy2d.modeler"),energy2d.modeler.makeModeler=function(e){"use strict";var t=n.makeCoreModel(e);return{nextStep:function(){t.nextStep()},getWidth:function(){return t.getModelOptions().model_width},getHeight:function(){return t.getModelOptions().model_height},getTime:function(){return t.getModelOptions().timestep*t.getIndexOfStep()},isWebGLActive:t.isWebGLActive,getWebGLError:t.getWebGLError,getIndexOfStep:t.getIndexOfStep,getGridWidth:t.getGridWidth,getGridHeight:t.getGridHeight,getTemperatureArray:t.getTemperatureArray,getTemperatureTexture:t.getTemperatureTexture,getUVelocityArray:t.getUVelocityArray,getVVelocityArray:t.getVVelocityArray,getVelocityTexture:t.getVelocityTexture,getPhotonsArray:t.getPhotonsArray,getPartsArray:t.getPartsArray,updateTemperatureArray:t.updateTemperatureArray,updateVelocityArrays:t.updateVelocityArrays,setPerformanceTools:t.setPerformanceTools}},energy2d.namespace("energy2d.utils.gpu");var r;energy2d.utils.gpu.init=function(){"use strict";var e=document.createElement("canvas");try{r=e.getContext("webgl")||e.getContext("experimental-webgl")}catch(t){}if(!r)throw new Error("GL: WebGL not supported.");return energy2d.utils.gpu.init=function(){return r},energy2d.utils.gpu.gl=r,r},energy2d.utils.gpu.assertInitialized=function(){"use strict";if(!r)throw new Error("GPU: WebGL not initialized. Call energy2d.utils.gpu.init().")},energy2d.namespace("energy2d.utils.gpu"),i.prototype.compile=function(e){"use strict";var t=[],n,i,s;for(n=0,i=1e4;n<this.data.length;n+=i)t=Array.prototype.concat.apply(t,this.data.slice(n,n+i));s=this.data.length?t.length/this.data.length:0;if(s!==Math.round(s))throw new Error("Mesh: buffer elements not of consistent size, average size is "+s);this.buffer=this.buffer||r.createBuffer(),this.buffer.length=t.length,this.buffer.spacing=s,r.bindBuffer(this.target,this.buffer),r.bufferData(this.target,new this.type(t),e||r.STATIC_DRAW)},energy2d.utils.gpu.Mesh=function(e){"use strict";e=e||{},this.vertexBuffers={},this.indexBuffers={},this.addVertexBuffer("vertices","gl_Vertex"),e.coords&&this.addVertexBuffer("coords","gl_TexCoord"),e.normals&&this.addVertexBuffer("normals","gl_Normal"),e.colors&&this.addVertexBuffer("colors","gl_Color"),(e.lines===undefined||e.triangles)&&this.addIndexBuffer("triangles"),e.lines&&this.addIndexBuffer("lines")},energy2d.utils.gpu.Mesh.prototype.addVertexBuffer=function(e,t){"use strict";var n=this.vertexBuffers[t]=new i(r.ARRAY_BUFFER,Float32Array);n.name=e,this[e]=[]},energy2d.utils.gpu.Mesh.prototype.addIndexBuffer=function(e){"use strict";var t=this.indexBuffers[e]=new i(r.ELEMENT_ARRAY_BUFFER,Uint16Array);this[e]=[]},energy2d.utils.gpu.Mesh.prototype.compile=function(){"use strict";var e,t,n;for(e in this.vertexBuffers)this.vertexBuffers.hasOwnProperty(e)&&(n=this.vertexBuffers[e],n.data=this[n.name],n.compile());for(t in this.indexBuffers)this.indexBuffers.hasOwnProperty(t)&&(n=this.indexBuffers[t],n.data=this[t],n.compile())},energy2d.utils.gpu.Mesh.plane=function(e){"use strict";var t,n,r,i,s,o,u,a;e=e||{},t=new energy2d.utils.gpu.Mesh(e),n=e.detailX||e.detail||1,r=e.detailY||e.detail||1;for(s=0;s<=r;s+=1){o=s/r;for(i=0;i<=n;i+=1)u=i/n,t.vertices.push([2*u-1,2*o-1,0]),t.coords&&t.coords.push([u,o]),t.normals&&t.normals.push([0,0,1]),i<n&&s<r&&(a=i+s*(n+1),t.triangles.push([a,a+1,a+n+1]),t.triangles.push([a+n+1,a+1,a+n+2]))}return t.compile(),t},energy2d.namespace("energy2d.utils.gpu"),energy2d.utils.gpu.Shader=function(e,t){"use strict";function a(e,t){var n=r.createShader(e);r.shaderSource(n,t),r.compileShader(n);if(!r.getShaderParameter(n,r.COMPILE_STATUS))throw new Error("Shader: compile error.\n"+r.getShaderInfoLog(n)+"\nSource:\n"+t);return n}var n="    attribute vec4 gl_Vertex;    attribute vec4 gl_TexCoord;    attribute vec3 gl_Normal;    attribute vec4 gl_Color;    ",i="    precision highp float;    ",o=function(e,t){var n={},r;return r=/^((\s*\/\/.*\n|\s*#extension.*\n)+)[^]*$/.exec(t),t=r?r[1]+e+t.substr(r[1].length):e+t,s(/\bgl_\w+\b/g,e,function(e){n[e]===undefined&&(t=t.replace(new RegExp("\\b"+e+"\\b","g"),"_"+e),n[e]=!0)}),t},u={};e=o(n,e),t=o(i,t),this.program=r.createProgram(),r.attachShader(this.program,a(r.VERTEX_SHADER,e)),r.attachShader(this.program,a(r.FRAGMENT_SHADER,t)),r.linkProgram(this.program);if(!r.getProgramParameter(this.program,r.LINK_STATUS))throw new Error("Shader: link error.\n"+r.getProgramInfoLog(this.program)+"\nSource:\n"+e+"\n\n"+t);this.attributes={},this.uniformLocations={},s(/uniform\s+sampler(1D|2D|3D|Cube)\s+(\w+)\s*;/g,e+t,function(e){u[e[2]]=1}),this.isSampler=u},energy2d.utils.gpu.Shader.prototype.uniforms=function(e){"use strict";var t,n,i;r.useProgram(this.program);for(t in e)if(e.hasOwnProperty(t)){this.uniformLocations[t]===undefined&&(this.uniformLocations[t]=r.getUniformLocation(this.program,t)),n=this.uniformLocations[t];if(n===null){console.warn("Shader: name "+t+" does not correspond to an active uniform variable.");continue}i=e[t];if(o(i))switch(i.length){case 1:r.uniform1fv(n,new Float32Array(i));break;case 2:r.uniform2fv(n,new Float32Array(i));break;case 3:r.uniform3fv(n,new Float32Array(i));break;case 4:r.uniform4fv(n,new Float32Array(i));break;case 9:r.uniformMatrix3fv(n,!1,new Float32Array([i[0],i[3],i[6],i[1],i[4],i[7],i[2],i[5],i[8]]));break;case 16:r.uniformMatrix4fv(n,!1,new Float32Array([i[0],i[4],i[8],i[12],i[1],i[5],i[9],i[13],i[2],i[6],i[10],i[14],i[3],i[7],i[11],i[15]]));break;default:throw new Error("Shader: don't know how to load uniform \""+t+'" of length '+i.length)}else{if(!u(i))throw new Error('Shader: attempted to set uniform "'+t+'" to invalid value '+i);(this.isSampler[t]?r.uniform1i:r.uniform1f).call(r,n,i)}}return this},energy2d.utils.gpu.Shader.prototype.draw=function(e,t){"use strict";r.useProgram(this.program),this.drawBuffers(e.vertexBuffers,e.indexBuffers[t===r.LINES?"lines":"triangles"],arguments.length<2?r.TRIANGLES:t)},energy2d.utils.gpu.Shader.prototype.drawBuffers=function(e,t,n){"use strict";var i=0,s,o,u;for(s in e)if(e.hasOwnProperty(s)){o=e[s],this.attributes[s]===undefined&&(this.attributes[s]=r.getAttribLocation(this.program,s.replace(/^gl_/,"_gl_"))),u=this.attributes[s];if(u===-1||!o.buffer)continue;r.bindBuffer(r.ARRAY_BUFFER,o.buffer),r.enableVertexAttribArray(u),r.vertexAttribPointer(u,o.buffer.spacing,r.FLOAT,!1,0,0),i=o.buffer.length/o.buffer.spacing}for(s in this.attributes)this.attributes.hasOwnProperty(s)&&e[s]===undefined&&r.disableVertexAttribArray(this.attributes[s]);i&&(!t||t.buffer)&&(t?(r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.buffer),r.drawElements(n,t.buffer.length,r.UNSIGNED_SHORT,0)):r.drawArrays(n,0,i))},energy2d.namespace("energy2d.utils.gpu"),energy2d.utils.gpu.Texture=function(e,t,n){"use strict";energy2d.utils.gpu.assertInitialized(),n=n||{},this.id=r.createTexture(),this.width=e,this.height=t,this.format=n.format||r.RGBA,this.type=n.type||r.UNSIGNED_BYTE,this.tex_unit=null,this.fbo=null,r.bindTexture(r.TEXTURE_2D,this.id),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,n.mag_filter||n.filter||r.LINEAR),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,n.min_filter||n.filter||r.LINEAR),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,n.wrap||n.wrap_s||r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,n.wrap||n.wrap_t||r.CLAMP_TO_EDGE),r.texImage2D(r.TEXTURE_2D,0,this.format,e,t,0,this.format,this.type,null)},energy2d.utils.gpu.Texture.prototype.setAsRenderTarget=function(){"use strict";this.fbo===null?(this.fbo=r.createFramebuffer(),r.bindFramebuffer(r.FRAMEBUFFER,this.fbo),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,this.id,0),r.viewport(0,0,this.width,this.height)):(r.bindFramebuffer(r.FRAMEBUFFER,this.fbo),r.viewport(0,0,this.width,this.height))},energy2d.utils.gpu.Texture.prototype.bind=function(e){"use strict";this.tex_unit=e||0,r.activeTexture(r.TEXTURE0+this.tex_unit),r.bindTexture(r.TEXTURE_2D,this.id)},energy2d.utils.gpu.Texture.prototype.unbind=function(e){"use strict";if(this.tex_unit===null)return;r.activeTexture(r.TEXTURE0+this.tex_unit),r.bindTexture(r.TEXTURE_2D,null),this.tex_unit=null},energy2d.utils.gpu.Texture.prototype.drawTo=function(e){"use strict";if(this.fbo===null)throw new Error("Texture: call setupAsRenderTarget() method first.");r.bindFramebuffer(r.FRAMEBUFFER,this.fbo),r.viewport(0,0,this.width,this.height),e(),r.bindFramebuffer(r.FRAMEBUFFER,null)},energy2d.utils.gpu.Texture.prototype.swapWith=function(e){"use strict";var t;t=e.id,e.id=this.id,this.id=t,t=e.tex_unit,e.tex_unit=this.tex_unit,this.tex_unit=t,t=e.fbo,e.fbo=this.fbo,this.fbo=t},energy2d.namespace("energy2d.utils.gpu"),energy2d.utils.gpu.gpgpu=function(){"use strict";var e=energy2d.utils.gpu,t,n,r,i,s,o,u,a,f=!1,l=!1,c,h,p="    varying vec2 coord;    void main() {      coord = gl_Vertex.xy * 0.5 + 0.5;      gl_Position = vec4(gl_Vertex.xyz, 1.0);    }",d="    uniform sampler2D texture;    uniform float channel;    varying vec2 coord;    float shift_right(float v, float amt) {      v = floor(v) + 0.5;      return floor(v / exp2(amt));    }    float shift_left(float v, float amt) {      return floor(v * exp2(amt) + 0.5);    }        float mask_last(float v, float bits) {      return mod(v, shift_left(1.0, bits));    }    float extract_bits(float num, float from, float to) {      from = floor(from + 0.5);      to = floor(to + 0.5);      return mask_last(shift_right(num, from), to - from);    }    vec4 encode_float(float val) {      if (val == 0.0)        return vec4(0, 0, 0, 0);      float sign = val > 0.0 ? 0.0 : 1.0;      val = abs(val);      float exponent = floor(log2(val));      float biased_exponent = exponent + 127.0;      float fraction = ((val / exp2(exponent)) - 1.0) * 8388608.0;            float t = biased_exponent / 2.0;      float last_bit_of_biased_exponent = fract(t) * 2.0;      float remaining_bits_of_biased_exponent = floor(t);            float byte4 = extract_bits(fraction, 0.0, 8.0) / 255.0;      float byte3 = extract_bits(fraction, 8.0, 16.0) / 255.0;      float byte2 = (last_bit_of_biased_exponent * 128.0 + extract_bits(fraction, 16.0, 23.0)) / 255.0;      float byte1 = (sign * 128.0 + remaining_bits_of_biased_exponent) / 255.0;      return vec4(byte4, byte3, byte2, byte1);    }    void main() {      vec4 data = texture2D(texture, coord);      if (channel == 0.0)        gl_FragColor = encode_float(data.r);      else if (channel == 1.0)        gl_FragColor = encode_float(data.g);      else if (channel == 2.0)        gl_FragColor = encode_float(data.b);      else        gl_FragColor = encode_float(data.a);    }",v="    uniform sampler2D texture;    varying vec2 coord;    void main() {      gl_FragColor = texture2D(texture, coord);    }",m="GPGPU: call init(grid_width, grid_height) with proper dimensions first!",g=function(){t=e.init();if(!t.getExtension("OES_texture_float"))throw new Error("GPGPU: OES_texture_float is not supported!");s=new e.Texture(1,1,{type:t.FLOAT,format:t.RGBA,filter:t.LINEAR}),s.setAsRenderTarget();if(t.checkFramebufferStatus(t.FRAMEBUFFER)!==t.FRAMEBUFFER_COMPLETE)throw t.bindFramebuffer(t.FRAMEBUFFER,null),new Error("GPGPU: FLOAT texture as render target is not supported!");t.bindFramebuffer(t.FRAMEBUFFER,null),t.disable(t.DEPTH_TEST),a=e.Mesh.plane(),c=new e.Shader(p,d),h=new e.Shader(p,v),l=!0},y=function(e,t,n,r,i){var s,o,u,a;if(e.length!==t.length||e.length!==n.length||e.length!==r.length||i.length!==e.length*4)throw new Error("GPGPU: Invalid input data length.");for(o=0,a=e.length;o<a;o+=1)u=o*4,i[u]=e[o],i[u+1]=t[o],i[u+2]=n[o],i[u+3]=r[o]};return{init:function(i,a){l||g(),n=i,r=a,s=new e.Texture(n,r,{type:t.FLOAT,format:t.RGBA,filter:t.LINEAR}),o=new e.Texture(n,r,{type:t.UNSIGNED_BYTE,format:t.RGBA,filter:t.LINEAR}),u=new Float32Array(n*r*4)},getWebGLContext:function(){return t===undefined&&g(),t},createTexture:function(){var i;return!n||!r?new Error(m):(i=new e.Texture(n,r,{type:t.FLOAT,format:t.RGBA,filter:t.LINEAR}),i)},convertToRGBA:function(e,t,i){var s,o,u,a;if(e.length!==n*r)throw new Error("GPGPU: Invalid input data length.");i===undefined?s=new Float32Array(e.length*4):s=i,t===undefined&&(t=0);for(o=0,u=e.length;o<u;o+=1)a=o*4,s[a]=s[a+1]=s[a+2]=s[a+3]=0,s[a+t]=e[o];return s},writeTexture:function(e,n){var r=this.convertToRGBA(n,0,u);t.bindTexture(t.TEXTURE_2D,e.id),t.texImage2D(t.TEXTURE_2D,0,e.format,e.width,e.height,0,e.format,e.type,r)},writeRGBATexture:function(e,n,r,i,s){y(n,r,i,s,u),t.bindTexture(t.TEXTURE_2D,e.id),t.texImage2D(t.TEXTURE_2D,0,e.format,e.width,e.height,0,e.format,e.type,u)},readTexture:function(e,i,s){var u,f,l;if(!t||e.width!==n||e.height!==r)return new Error(m);s===undefined&&(s=0),u=new Uint8Array(i.buffer),e.bind(),o.setAsRenderTarget(),c.uniforms({channel:s}),c.draw(a),t.readPixels(0,0,o.width,o.height,o.format,o.type,u)},copyTexture:function(e,t){e.bind(),t.setAsRenderTarget(),h.draw(a)},executeProgram:function(e,t,n){var r,i;for(r=0,i=t.length;r<i;r+=1)t[r].bind(r);s.setAsRenderTarget(),e.draw(a);for(r=0,i=t.length;r<i;r+=1)t[r].unbind(r);n.swapWith(s)},setSynchronizationAllowed:function(e){f=e},tryFinish:function(){f&&t.finish()}}}(),energy2d.namespace("energy2d.utils.performance"),energy2d.utils.performance.makePerformanceTools=function(){"use strict";var e={id:undefined,data:undefined,parent:undefined,children:{}},t=e,n={},r=function(e){return t.children[e]||(t.children[e]={id:e,data:{sum:0,count:0,avg:0},parent:t,children:{}}),t=t.children[e],t};return{start:function(e){r(e),t.start_time=(new Date).getTime()},stop:function(e){var n=(new Date).getTime();if(t.id!==e)throw new Error("Performance: there is another active counter: "+t.name);t.data.sum+=n-t.start_time,t.data.count+=1,t.data.avg=t.data.sum/t.data.count,t=t.parent},startFPS:function(e){n[e]={start_time:(new Date).getTime(),count:0,fps:0}},updateFPS:function(e){var t=n[e],r=(new Date).getTime();if(!t)return;t.count+=1,t.fps=t.count/((r-t.start_time)/1e3)},stopFPS:function(e){delete n[e]},getTree:function(){return e},getFPSData:function(){return n}}},energy2d.namespace("energy2d.views.utils"),energy2d.views.utils.HSVToRGB=function(e,t,n){"use strict";var r,i,s,o,u,a,f,l;e=Math.max(0,Math.min(360,e)),t=Math.max(0,Math.min(100,t)),n=Math.max(0,Math.min(100,n)),t/=100,n/=100;if(t===0)return r=i=s=n,[Math.round(r*255),Math.round(i*255),Math.round(s*255)];e/=60,o=Math.floor(e),u=e-o,a=n*(1-t),f=n*(1-t*u),l=n*(1-t*(1-u));switch(o){case 0:r=n,i=l,s=a;break;case 1:r=f,i=n,s=a;break;case 2:r=a,i=n,s=l;break;case 3:r=a,i=f,s=n;break;case 4:r=l,i=a,s=n;break;default:r=n,i=a,s=f}return[Math.round(r*255),Math.round(i*255),Math.round(s*255)]},energy2d.views.utils.setupRGBTemperatureColorTables=function(e,t,n){"use strict";var r=energy2d.views.utils.HSVToRGB,i=[],s;for(s=0;s<256;s+=1)i=energy2d.views.utils.HSVToRGB(s,100,90),e[s]=i[0],t[s]=i[1],n[s]=i[2]},energy2d.namespace("energy2d.views.ColorPalette");var a={};a[0]=a.RAINBOW=[[0,0,128],[20,50,120],[20,100,200],[10,150,150],[120,180,50],[220,200,10],[240,160,36],[225,50,50],[230,85,110],[250,250,250],[255,255,255]],a[1]=a.IRON=[[40,20,100],[80,20,150],[150,20,150],[200,50,120],[220,80,80],[230,120,30],[240,200,20],[240,220,80],[255,255,125],[250,250,250],[255,255,255]],a[2]=a.GRAY=[[50,50,50],[75,75,75],[100,100,100],[125,125,125],[150,150,150],[175,175,175],[200,200,200],[225,225,225],[250,250,250],[255,255,255]],a[3]=a.RAINBOW2=function(){"use strict";var e=energy2d.views.utils.HSVToRGB,t=256,n=new Array(t),r;for(r=0;r<t;r+=1)n[r]=energy2d.views.utils.HSVToRGB(t-1-r,100,90);return n}(),energy2d.views.ColorPalette.getRGBArray=function(e){"use strict";return e===undefined||e==="DEFAULT"?a.RAINBOW:a[e]},energy2d.namespace("energy2d.views"),energy2d.views.makeHeatmapView=function(e){"use strict";var t=energy2d.views.ColorPalette,n="energy2d-heatmap-view",r,i,s,o,u,a,f,l,c,h,p,d=0,v=50,m=function(){r=$("<canvas />"),r.attr("id",e||n),i=r[0].getContext("2d"),window.devicePixelRatio>1&&(i.webkitBackingStorePixelRatio>1||typeof i.webkitBackingStorePixelRatio=="undefined")?s=window.devicePixelRatio:s=1},g={renderHeatmap:function(){var e,t,n,r,o,u,a,m,g,y,b,w;if(!c)throw new Error("Heatmap: bind heatmap before rendering.");i.clearRect(0,0,h,p),i.fillStyle="rgb(0,0,0)",e=l/(v-d),u=i.getImageData(0,0,h/s,p/s),a=u.data,b=0,w=4*h;for(m=0;m<h;m+=1){y=m*p,b=4*m;for(g=0;g<p;g+=1)n=e*(c[y+g]-d),t=Math.floor(n),n-=t,t<0?(t=0,n=0):t>l-1&&(t=l-1,n=1),r=f[t],o=f[t+1],a[b]=r[0]*(1-n)+o[0]*n,a[b+1]=r[1]*(1-n)+o[1]*n,a[b+2]=r[2]*(1-n)+o[2]*n,a[b+3]=255,b+=w}i.putImageData(u,0,0)},bindHeatmap:function(e,t,n){if(t*n!==e.length)throw new Error("Heatmap: provided heatmap has wrong dimensions.");c=e,h=t,p=n,this.setCanvasSize(h,p)},getHTMLElement:function(){return r},updateCanvasSize:function(){o=r.width(),u=r.height(),a?(r.attr("width",o),r.attr("height",u)):this.setCanvasSize(h,p)},setCanvasSize:function(e,t){r.attr("width",e/s),r.attr("height",t/s)},setHQRenderingEnabled:function(e){a=e,this.updateCanvasSize()},setMinTemperature:function(e){d=e},setMaxTemperature:function(e){v=e},setColorPalette:function(e){f=t.getRGBArray(e),l=f.length-1}};return g.setColorPalette("DEFAULT"),m(),g},energy2d.namespace("energy2d.views"),energy2d.views.makeHeatmapWebGLView=function(t){"use strict";var n=energy2d.views.ColorPalette,r=energy2d.utils.gpu,i=e.glsl,s="src/lab/views/energy2d/heatmap-webgl-glsl/",o=i[s+"basic.vs.glsl"],u=i[s+"temp-renderer.fs.glsl"],a=r.init(),f=new r.Shader(o,u),l=r.Mesh.plane({coords:!0}),c,h="energy2d-heatmap-webgl-view",p,d,v,m,g=0,y=50,b=function(){p=$(a.canvas),p.attr("id",t||h)},w=function(){a.bindFramebuffer(a.FRAMEBUFFER,null),a.viewport(0,0,d,v)},E={renderHeatmap:function(){if(!m)throw new Error("Heatmap: bind heatmap texture before rendering.");(d!==p.width()||v!==p.height())&&this.updateCanvasSize(),w(),a.clear(a.COLOR_BUFFER_BIT),m.bind(0),c.bind(1),f.draw(l),c.unbind(1),m.unbind(0)},updateCanvasSize:function(){d=p.width(),v=p.height(),p.attr("width",d),p.attr("height",v)},bindHeatmapTexture:function(e){m=e},getHTMLElement:function(){return p},setMinTemperature:function(e){g=e,f.uniforms({min_temp:g})},setMaxTemperature:function(e){y=e,f.uniforms({max_temp:y})},setColorPalette:function(e){var t,i,s,o,u;t=n.getRGBArray(e),i=t.length,s=new Uint8Array(i*4);for(o=0;o<i;o+=1)u=o*4,s[u]=t[o][0],s[u+1]=t[o][1],s[u+2]=t[o][2],s[u+3]=255;c=new r.Texture(i,1,{type:a.UNSIGNED_BYTE,format:a.RGBA,filter:a.LINEAR}),a.bindTexture(a.TEXTURE_2D,c.id),a.texImage2D(a.TEXTURE_2D,0,c.format,i,1,0,c.format,c.type,s)}};return E.setColorPalette("DEFAULT"),f.uniforms({heatmap_tex:0,palette_tex:1,min_temp:g,max_temp:y}),l.coords=[[1,0],[1,1],[0,0],[0,1]],l.compile(),b(),E},energy2d.namespace("energy2d.views"),energy2d.views.makeVectormapView=function(e){"use strict";var t="energy2d-vectormap-view",n=100,r=8,i=Math.cos(.523598776),s=Math.sin(.523598776),o=4,u="rgb(175,175,175)",a,f,l,c,h,p,d,v,m,g=function(){a=$("<canvas />"),a.attr("id",e||t),f=a[0].getContext("2d")},y=function(e,t,u,a){var l=1/Math.sqrt(u*u+a*a),c=u*l,h=a*l,p=e+c*r+u*n,d=t+h*r+a*n,v=o*(c*i+h*s),m=o*(h*i-c*s);f.beginPath(),f.moveTo(e,t),f.lineTo(p,d),f.lineTo(p-v,d-m),f.moveTo(p,d),v=o*(c*i-h*s),m=o*(h*i+c*s),f.lineTo(p-v,d-m),f.stroke()},b={renderVectormap:function(){var e,t,n,r,i,s,o,g,b,w;if(!h||!p)throw new Error("Vectormap: bind vectormap before rendering.");(l!==a.width()||c!==a.height())&&this.updateCanvasSize(),e=l/d,t=c/v,f.clearRect(0,0,l,c),f.strokeStyle=u,f.lineWidth=1;for(o=1;o<d-1;o+=m){b=o*v,n=(o+.5)*e;for(g=1;g<v-1;g+=m)w=b+g,r=(g+.5)*t,i=h[w],s=p[w],i*i+s*s>1e-15&&y(n,r,i,s)}},bindVectormap:function(e,t,n,r,i){if(n*r!==e.length)throw new Error("Heatmap: provided U component of vectormap has wrong dimensions.");if(n*r!==t.length)throw new Error("Heatmap: provided V component of vectormap has wrong dimensions.");h=e,p=t,d=n,v=r,m=Math.round(n/i)},getHTMLElement:function(){return a},updateCanvasSize:function(){l=a.width(),c=a.height(),a.attr("width",l),a.attr("height",c)}};return g(),b},energy2d.namespace("energy2d.views"),energy2d.views.makeVectormapWebGLView=function(t){"use strict";var n=energy2d.utils.gpu,r=e.glsl,i="src/lab/views/energy2d/vectormap-webgl-glsl/",s=r[i+"vectormap.vs.glsl"],o=r[i+"vectormap.fs.glsl"],u=n.init(),a=new n.Shader(s,o),f=new n.Mesh({coords:!0,lines:!0}),l="energy2d-vectormap-webgl-view",c=100,h=8,p=[.7,.7,.7,1],d,v,m,g,y,b,w,E=function(){var e,t,n,r,i,s,o=2/y,u=2/b,a=1/y,l=1/b;f.addVertexBuffer("origins","origin"),f.vertices=[],f.origins=[],f.coords=[],f.lines=[],r=0;for(e=1;e<y-1;e+=w)for(t=1;t<b-1;t+=w)f.vertices.push([0,0,0],[.01,0,0],[-3,2,0],[-3,-2,0]),i=[-1+(e+.5)*o,1-(t+.5)*u,0],f.origins.push(i,i,i,i),s=[(t+.5)*l,(e+.5)*a],f.coords.push(s,s,s,s),f.lines.push([r,r+1],[r+1,r+2],[r+1,r+3]),r+=4;f.compile()},S=function(){d=$(u.canvas),d.attr("id",t||l)},x=function(){u.bindFramebuffer(u.FRAMEBUFFER,null),u.viewport(0,0,v,m)},T={renderVectormap:function(){if(!g)throw new Error("Vectormap: bind heatmap texture before rendering.");(v!==d.width()||m!==d.height())&&this.updateCanvasSize(),x(),g.bind(0),a.draw(f,u.LINES),g.unbind(0)},updateCanvasSize:function(){v=d.width(),m=d.height(),d.attr("width",v),d.attr("height",m),a.uniforms({scale:[2/v,2/m]})},bindVectormapTexture:function(e,t,n,r){g=e,y=t,b=n,w=Math.round(y/r),E()},getHTMLElement:function(){return d}};return a.uniforms({vectormap_tex:0,base_length:h,vector_scale:c,color:p}),S(),T},energy2d.namespace("energy2d.views"),energy2d.views.makeSimulationDescription=function(e){"use strict";var t="energy2d-description",n="energy2d-description",r,i,s=function(){var r,s,o,u;i=$("<div />"),i.attr("id",e.id||t),i.addClass(e.class||n),r=$("<div>"+e.title+"</div>"),r.attr("class",t+"-title"),i.append(r),s=$("<div>"+e.tagline+"</div>"),s.attr("class",t+"-tagline"),i.append(s),o=$("<div>"+e.content+"</div>"),o.attr("class",t+"-content"),i.append(o),u=$("<div>"+e.footnote+"</div>"),u.attr("class",t+"-footnote"),i.append(u)},o={bindSimulationController:function(e){r=e},getHTMLElement:function(){return i}};return s(),o},energy2d.namespace("energy2d.views"),energy2d.views.makePerformanceView=function(e){"use strict";var t="energy2d-performance",n="energy2d-performance",r,i,s,o,u=function(){r=$("<div />"),s=$("<pre />"),i=$("<pre />"),r.append("<h2>FPS Counters:</h2>"),r.append(s),r.append("<h2>Stats (average time):</h2>"),r.append(i)},a=function(e,t){var n,r,s;for(n in e)if(e.hasOwnProperty(n)){r=e[n];for(s=0;s<t;s+=1)i.append("  ");i.append(r.id+": "+r.data.avg.toFixed(2)+"ms\n"),a(r.children,t+1)}},f=function(e){i.html(""),a(e.children,0)},l=function(e){var t;s.html("");for(t in e)e.hasOwnProperty(t)&&s.append(t+": "+e[t].fps.toFixed(2)+" fps")},c={bindModel:function(e){o=e},update:function(){l(o.getFPSData()),f(o.getTree())},getHTMLElement:function(){return r}};return u(),c},energy2d.namespace("energy2d.views"),energy2d.views.makeWebGLStatusView=function(e){"use strict";var t=energy2d.utils.gpu,n="energy2d-webgl-status",r,i,s,o,u,a,f=function(){r=$("<div />"),r.attr("id",e||n),r.append("<h2>WebGL status</h2>"),i=$("<p />"),r.append(i),o=$("<ul />"),r.append(o),s=$("<p />"),s.css("color","orange"),r.append(s)},l=function(){var e,n;a={};try{e=t.init(),a["WebGL context"]=!0}catch(r){a["WebGL context"]=!1;return}e.getExtension("OES_texture_float")?a["OES_texture_float extension"]=!0:a["OES_texture_float extension"]=!1,a["OES_texture_float extension"]&&(n=new t.Texture(1,1,{type:e.FLOAT,format:e.RGBA,filter:e.LINEAR}),n.setAsRenderTarget(),e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE?a["FLOAT texture as render target"]=!0:a["FLOAT texture as render target"]=!1,e.bindFramebuffer(e.FRAMEBUFFER,null))},c=function(){var e,t,n,r;i.html("Energy2D GPU solvers: "),u.isWebGLActive()?(t=$("<span>active</span>"),t.css("color","green")):(t=$("<span>inactive</span>"),t.css("color","orange")),i.append(t),o.html("");for(e in a)a.hasOwnProperty(e)&&(a[e]?(t=$("<span>available</span>"),t.css("color","green")):(t=$("<span>not available</span>"),t.css("color","red")),n=$("<li>"+e+": </li>"),n.append(t),o.append(n));s.html(""),r=u.getWebGLError(),r!==undefined&&s.append(r)},h={bindModel:function(e){u=e},updateAndRender:function(){l(),c()},getHTMLElement:function(){return r}};return f(),h},energy2d.namespace("energy2d.views"),energy2d.views.makeEnergy2DScene=function(e,t){"use strict";var n="energy2d-scene-view",r="energy2d-scene-view",i={color_palette_type:0,minimum_temperature:0,maximum_temperature:40},s,o,u,a,f,l,c=0,h=function(){l=$("<div />"),l.attr("id",e||n),l.addClass(r),l.css("position","relative"),l.append(s.getHTMLElement()),l.append(o.getHTMLElement()),l.append(a.getHTMLElement()),l.append(u.getHTMLElement()),l.append(f.getHTMLElement())},p=function(e){var t=e.getHTMLElement();t.css("width","100%"),t.css("height","100%"),t.css("position","absolute"),t.css("left","0"),t.css("top","0"),t.css("z-index",c),c+=1},d=function(e){var t=e.getHTMLElement();t.css("color","white"),t.css("font-weight","bold"),t.css("font-family","Monospace"),t.css("position","absolute"),t.css("right","0"),t.css("top","0"),t.css("z-index",c),c+=1},v={getHeatmapView:function(){return s},getVelocityView:function(){return o},getPartsView:function(){return u},getPhotonsView:function(){return a},getTimeView:function(){return f},getHTMLElement:function(){return l},setVisualizationOptions:function(e){var t;for(t in i)i.hasOwnProperty(t)&&e[t]===undefined&&(e[t]=i[t]);s.setMinTemperature(e.minimum_temperature),s.setMaxTemperature(e.maximum_temperature),s.setColorPalette(e.color_palette_type)}};return t?(s=energy2d.views.makeHeatmapWebGLView(),o=energy2d.views.makeVectormapWebGLView(),p(o)):(s=energy2d.views.makeHeatmapView(),o=energy2d.views.makeVectormapView(),p(s),p(o)),a=energy2d.views.makePhotonsView(),p(a),u=energy2d.views.makePartsView(),p(u),f=energy2d.views.makeTimeView(),d(f),h(),v},energy2d.views.makePartsView=function(e){"use strict";var t="energy2d-parts-view",n="energy2d-parts-view",r,i,s,o,u,a,f,l,c,h=[],p=function(){r=$("<canvas />"),r.attr("id",e||t),r.addClass(n),i=r[0].getContext("2d")},d=function(){i.strokeStyle="black",i.lineCap="round",i.lineJoin="round",i.lineWidth=1,i.font="12px sans-serif",i.textBaseline="middle"},v=function(){var e=8,t=8,n,r;n=$("<canvas />"),n.attr("width",e),n.attr("height",t),r=n[0].getContext("2d"),r.clearRect(0,0,e,t),r.strokeStyle="black",r.beginPath(),r.moveTo(0,0),r.lineTo(t,t),r.stroke(),h.push(n[0])},m=function(e){var t=e.x*a-1,n=e.y*f-1,r=e.width*a+2,s=e.height*f+2,o=t+.5*r,u=n+.5*s;i.beginPath(),i.moveTo(t,n),i.lineTo(t+r,n),i.lineTo(t+r,n+s),i.lineTo(t,n+s),i.lineTo(t,n),i.closePath()},g=function(e){var t=e.x_coords,n=e.y_coords,r=0,s=0,o,u;i.beginPath(),i.moveTo(t[0]*a,n[0]*f);for(o=1,u=e.count;o<u;o+=1)i.lineTo(t[o]*a,n[o]*f);i.closePath()},y=function(e){var t,n,r,s,o,u,l;if(e.rectangle)n=e.rectangle.x+.5*e.rectangle.width,r=e.rectangle.y+.5*e.rectangle.height;else if(e.ellipse)n=e.ellipse.x,r=e.ellipse.y;else if(e.ring)n=e.ring.x,r=e.ring.y;else if(e.polygon){o=e.polygon.vertices,n=r=0;for(u=0,l=e.polygon.count;u<l;u+=1)n+=o[u*2],r+=o[u*2+1];n/=l,r/=l}n*=a,r*=f,i.fillStyle="white",t=e.getLabel(),s=i.measureText(t).width,i.fillText(t,n-.5*s,r)},b=function(e){var t="gray",n;if(e.color)if(typeof e.color=="string")n=e.color;else{n=e.color.toString();while(n.length<6)n="0"+n}else e.power>0?n="FFFF00":e.power<0?n="B0C4DE":e.constant_temperature?n="rgba(0, 0, 0, 0.0)":n=t;return n},w={renderParts:function(){var e,t,n,a;if(!u)throw new Error("Parts view: bind parts array before rendering.");(s!==r.width()||o!==r.height())&&this.updateCanvasSize(),i.clearRect(0,0,s,o);for(n=0,a=u.length;n<a;n+=1){e=u[n];if(!e.visible)continue;g(e.shape.polygonize()),e.rectangle?m(e.shape):g(e.shape.polygonize()),e.filled&&(i.fillStyle=b(e),i.fill()),e.texture&&(i.fillStyle=i.createPattern(h[0],"repeat"),i.fill()),i.stroke(),e.ring&&(g(e.shape.polygonizeInner()),t=i.globalCompositeOperation,i.globalCompositeOperation="destination-out",i.fill(),i.globalCompositeOperation=t,i.stroke()),e.label&&y(e)}},bindPartsArray:function(e,t,n){u=e,l=t,c=n,a=s/l,f=o/c},getHTMLElement:function(){return r},updateCanvasSize:function(){s=r.width(),o=r.height(),a=s/l,f=o/c,r.attr("width",s),r.attr("height",o),d()}};return p(),d(),v(),w},energy2d.views.makePhotonsView=function(e){"use strict";var t="energy2d-photons-view",n="energy2d-photons-view",r=10,i,s,o,u,a,f,l,c,h,p=function(){i=$("<canvas />"),i.attr("id",e||t),i.addClass(n),s=i[0].getContext("2d")},d=function(){s.strokeStyle="rgba(255,255,255,128)",s.lineWidth=.5},v={renderPhotons:function(){var e,t,n,c,h,p;if(!a)throw new Error("Photons view: bind parts array before rendering.");(o!==i.width()||u!==i.height())&&this.updateCanvasSize(),s.clearRect(0,0,o,u);for(h=0,p=a.length;h<p;h+=1)e=a[h],t=e.x*f,n=e.y*l,c=1/Math.sqrt(e.vx*e.vx+e.vy*e.vy),s.beginPath(),s.moveTo(t,n),s.lineTo(t+r*e.vx*c,n+r*e.vy*c),s.stroke()},bindPhotonsArray:function(e,t,n){a=e,c=t,h=n,f=o/c,l=u/h},getHTMLElement:function(){return i},updateCanvasSize:function(){o=i.width(),u=i.height(),f=o/c,l=u/h,i.attr("width",o),i.attr("height",u),d()}};return p(),d(),v},energy2d.views.makeSimulationPlayerView=function(e){"use strict";var t="energy2d-simulation-player",n="energy2d-simulation-player",r,i,s=function(){var s;i=$("<div />"),i.attr("id",e||t),i.addClass(n),s=$('<button type="button" id="sim-stop">Stop</button>'),s.click(function(){r.simulationStop()}),i.append(s),s=$('<button type="button" id="sim-step">Step</button>'),s.click(function(){r.simulationStep()}),i.append(s),s=$('<button type="button" id="sim-play">Play</button>'),s.click(function(){r.simulationPlay()}),i.append(s),s=$('<button type="button" id="sim-reset">Reset</button>'),s.click(function(){r.simulationReset()}),i.append(s)},o={bindSimulationController:function(e){r=e},getHTMLElement:function(){return i}};return s(),o},energy2d.views.makeTimeView=function(e){"use strict";var t="energy2d-time",n="energy2d-time",r,i=function(){r=$("<div />"),r.attr("id",e||t),r.addClass(n),r.html("0:00:00:00")},s=function(e,t){var n=e.toString();while(n.length<t)n="0"+n;return n},o={renderTime:function(e){var t,n,i,o;e=Math.floor(e),t=e%60,e=Math.floor(e/60),n=e%60,e=Math.floor(e/60),i=e%24,e=Math.floor(e/24),o=e,r.html(o+":"+s(i,2)+":"+s(n,2)+":"+s(t,2))},getHTMLElement:function(){return r}};return i(),o},energy2d.namespace("energy2d.controllers"),energy2d.controllers.makeInteractiveController=function(e,t,n){"use strict";var r=energy2d.modeler,i=energy2d.views,s=energy2d.utils.performance,o,u,a,f,l=4,c,h,p,d,v,m,g,y,b={start:function(){},stop:function(){},startFPS:function(){},updateFPS:function(){},stopFPS:function(){}},w,E,S,x,T=function(e){return typeof ACTUAL_ROOT=="undefined"||e.charAt(0)!=="/"?e:ACTUAL_ROOT+e},N=function(e){return c=i.makeEnergy2DScene(e.id,f),h=c.getHeatmapView(),p=c.getVelocityView(),d=c.getPartsView(),v=c.getPhotonsView(),m=c.getTimeView(),c},C=function(e){return g=i.makeSimulationPlayerView(e.id),g.bindSimulationController(o),g},k=function(e){return w=i.makePerformanceView(e.id),w},L=function(e){return E=i.makeWebGLStatusView(e.id),E},A=function(e){return y=i.makeSimulationDescription(e),y.bindSimulationController(o),y},O=function(e){if(!e.type)throw new Error('Interactive controller: missing component "type" property.');switch(e.type){case"energy2d-scene-view":return N(e);case"energy2d-simulation-player":return C(e);case"energy2d-performance-view":return k(e);case"energy2d-webgl-status-view":return L(e);default:throw new Error("Interactive controller: unknow type of component.")}},M=function(){h.renderHeatmap(),p.renderVectormap(),v.renderPhotons(),m.renderTime(u.getTime()),w&&w.update()},_=function(){var e,t;b.stop("Gap between frames"),b.start("Frame (inc. "+l+" model steps)");for(e=0,t=l;e<t;e+=1)u.nextStep();b.start("Views update"),M(),b.stop("Views update"),b.stop("Frame (inc. "+l+" model steps)"),b.start("Gap between frames"),b.updateFPS("Model update and rendering")},D=function(){u=r.makeModeler(a.model),f=u.isWebGLActive()},P=function(){var r=e.components||[],i=e.description||{},s=e.layout||{},o,u,a,f,l;S=[];for(f=0,l=r.length;f<l;f+=1)o=O(r[f]),a=o.getHTMLElement(),u=s[r[f].id]||{},u.css&&a.css(u.css),u.class&&a.addClass(u.class),u.container?a.appendTo(u.container):a.appendTo(t),S.push(a);i&&(o=A(i),a=o.getHTMLElement(),a.appendTo(n),S.push(a))},H=function(){var e,t;for(e=0,t=S.length;e<t;e+=1)S[e].remove();S=[]},B=function(){var e,t;c.setVisualizationOptions(a.view),e=u.getGridWidth(),t=u.getGridHeight(),d.bindPartsArray(u.getPartsArray(),u.getWidth(),u.getHeight()),v.bindPhotonsArray(u.getPhotonsArray(),u.getWidth(),u.getHeight()
),f?(h.bindHeatmapTexture(u.getTemperatureTexture()),p.bindVectormapTexture(u.getVelocityTexture(),e,t,25)):(h.bindHeatmap(u.getTemperatureArray(),e,t),p.bindVectormap(u.getUVelocityArray(),u.getVVelocityArray(),e,t,25)),w&&(b=s.makePerformanceTools(),w.bindModel(b),u.setPerformanceTools(b)),E&&(E.bindModel(u),E.updateAndRender()),M(),d.renderParts()},j=function(){$.get(T(e.model)).success(function(e){typeof e=="string"&&(e=JSON.parse(e)),a=e,D(),P(),B()}).error(function(e,t,n){throw new Error("Interactive controller: loading scene options failed - "+t)})};return o={setWebGLEnabled:function(e){o.simulationStop(),a.model.use_WebGL=e,D(),H(),P(),B()},simulationPlay:function(){x||(x=setInterval(_,0),b.start("Gap between frames"),b.startFPS("Model update and rendering"))},simulationStep:function(){x||(b.start("Gap between frames"),_(),b.stop("Gap between frames"))},simulationStop:function(){x!==undefined&&(b.stop("Gap between frames"),b.stopFPS("Model update and rendering"),clearInterval(x),x=undefined)},simulationReset:function(){o.simulationStop(),D(),B()}},j(),o}})();