{
  "title": "DNA to Protein",
  "publicationStatus": "public",
  "subtitle": "",
  "about": [
    "Zoom into the cell to explore the transcription and translation of DNA ->mRNA -> protein.",
    "",
    "Customize the DNA strand to be transcribed and translated by using the **Edit DNA** button.",
    "",
    "Try mutating the DNA before or during transcription to see it's effect on the protein that gets produced. Click on a nucleotide to try various kinds of mutations that typically can occur."
  ],
  "fontScale": 0.65,
  "models": [
    {
      "id": "page3$0",
      "url": "imports/legacy-mw-content/converted/sam-activities/DNA-to-proteins/page3/page3$0.json",
      "viewOptions": {
        "controlButtons": "",
        "enableKeyboardHandlers": false
      },
      "modelOptions": {
        "DNA": "ATGCCAGGCGGCGAGAGCTTGCTAATTGGCTTATAG",
        "DNAState": "intro-cells"
      }
    }
  ],
  "components": [
    {
      "type": "button",
      "id": "transcribe",
      "text": "Transcribe",
      "action": [
        "if (DNAStateAfter('transcription-end'))",
        "  set('DNAState', 'dna');",
        "animateToDNAState('transcription-end');"
      ]
    },
    {
      "type": "button",
      "id": "transcribe-step",
      "text": "Transcribe step by step",
      "action": [
        "if (DNAStateBefore ('dna')) {",
        "  animateToDNAState('transcription:1');",
        "} else { ",
        "  transcribeDNAStep();",
        "}"
      ]
  },
    {
      "type": "button",
      "id": "translate",
      "text": "Translate",
      "action": [
        "if (DNAStateBefore('transcription-end')) {",
        "  alert('Translation can only occur after transcription is complete.');",
        "  return;",
        "}",
        "if (get('DNAState') === 'translation-end')",
        "  set('DNAState', 'translation:0');",
        "animateToDNAState('translation-end');"
      ]
    },
    {
      "type": "button",
      "id": "translate-step",
      "text": "Translate step by step",
      "action": [
        "if (DNAStateBefore('transcription-end')) {",
        "  alert('Translation can only occur after transcription is complete.');",
        "  return;",
        "} else {",
        "  translateDNAStep();",
        "}"
      ]
  },
    {
      "type": "text",
      "id": "label1",
      "text": "Click"
    },
    {
      "type": "text",
      "id": "label2",
      "text": "to see full mRNA strand created or"
    },
    {
      "type": "text",
      "id": "label3",
      "text": "Click"
    },
    {
      "type": "text",
      "id": "label4",
      "text": "to generate full protein from mRNA or"
    },
    {
      "type": "button",
      "id": "start",
      "text": "Start/continue model",
      "action": [
        "if (DNAStateBefore('translation-end')) animateToDNAState('translation-end');",
        "else start();"
      ]
    },
    {
      "type": "button",
      "id": "stop",
      "text": "Stop",
      "action": [
        "if (DNAStateBefore('translation-end')) stopDNAAnimation();",
        "else stop();"
      ]
    },
    {
      "type": "button",
      "id": "reset",
      "text": "Reset",
      "action": "reset();"
    },
    {
      "type": "button",
      "id": "prev-state-jump",
      "text": "<< Jump",
      "action": "jumpToPrevDNAState();"
    },
    {
      "type": "button",
      "id": "next-state",
      "text": "Continue one step",
      "action": "animateToNextDNAState();"
    },
    {
      "type": "button",
      "id": "next-state-jump",
      "text": "Jump >>",
      "action": "jumpToNextDNAState();"
    },
    {
      "type": "button",
      "id": "dna-dialog",
      "text": "Edit DNA",
      "action": "openDNADialog();"
    }
  ],
  "layout": {
    "model-bottom": [
      ["label1", "transcribe", "label2", "transcribe-step"],
      ["label3", "translate", "label4", "translate-step"],
      ["start", "stop", "reset", "dna-dialog"],
      ["prev-state-jump", "next-state", "next-state-jump"]
    ]
  },
  "template": [
    {
      "id": "model-bottom",
      "left": "model.left",
      "top": "model.bottom",
      "width": "model.width",
      "align": "center"
    }
  ]
}