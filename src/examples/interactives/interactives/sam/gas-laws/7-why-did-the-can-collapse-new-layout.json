{
  "title": "Pressure Equilibrium (new layout)",
  "publicationStatus": "draft",
  "subtitle": "Explore how heat and number of molecules affect pressure equilibrium between two gases.",
  "fontScale": 0.8,
  "about": [
    "There are gases on both sides of a moveable barrier (piston), which stays in the same place (more or less) when you run the model because the gas pressure on the piston is in equilibrium.",
    "Add purple gas molecules and watch what happens to the piston. Reset the model. Now add yellow gas molecules. What happens to the piston?",
    "Try heating or cooling the gas molecules. Explain the change in equilibrium with each change. Which has a greater effect on equilibrium -- changing the number of gas molecules or changing the temperature? Why?"
  ],
  "models": [
    {
      "id": "page7$0",
      "url": "/imports/legacy-mw-content/converted/sam-activities/gas-laws/original-interactives-in-pages/page7/page7$0.json",
      "viewOptions": {
        "controlButtons": "play_reset",
        "showVelocityVectors": true,
        "textBoxes": [
          {
            "text": "Piston wall",
            "x": 1.7465425109863282,
            "y": 1.43,
            "width": 0.5,
            "textAlign": "center",
            "layer": 1,
            "hostType": "RectangularObstacle",
            "hostIndex": 0
          }
        ]
      }
    }
  ],
  "outputs": [
    {
      "name": "avgSpeed",
      "units": "nm/fs?",
      "label": "area",
      "value": [
        "var avgVx = 0;",
        "var avgVy = 0;",
        "var atomNum = getNumberOfAtoms();",
        "for (var i = 0; i < atomNum; i++) {",
        "  avgVx += Math.abs(getAtomProperties(i).vx);",
        "  avgVy += Math.abs(getAtomProperties(i).vy);",
        "}",
        "avgVx /= atomNum;",
        "avgVy /= atomNum;",
        "return { 'avgVx' : avgVx, 'avgVy': avgVy};"
     ]
    }
  ],
  "components": [
    {
      "type": "checkbox",
      "id": "show-velocity",
      "text": "Show Velocity",
      "property": "showVelocityVectors"
    },
    {
      "type": "text",
      "id": "purple-label",
      "text": "Purple Atoms",
      "width": "5em"
    },
    {
      "type": "text",
      "id": "yellow-label",
      "text": "Yellow Atoms",
      "width": "5em"
    },
    {
      "type": "button",
      "id": "add-inside",
      "text": "Add",
      "width": "5em",
      "action": [
        "var elemNum = 3;",
        "var maxX = getObstacleProperties(0).x - getElementProperties(elemNum).sigma;",
        "addAtom({ element: elemNum, x: maxX * Math.random()  , y: get('height') * Math.random(), vx: get('avgSpeed').avgVx, vy: get('avgSpeed').avgVy});"
      ]
    },
    {
      "type": "button",
      "id": "add-outside",
      "text": "Add",
      "width": "5em",
      "action": [
        "var elemNum = 1;",
        "var minX = getObstacleProperties(0).x + getObstacleProperties(0).width + getElementProperties(elemNum).sigma;",
        "addAtom({ element: elemNum, x: (get('width') - minX) * Math.random() + minX , y: get('height') * Math.random(), vx: get('avgSpeed').avgVx, vy: get('avgSpeed').avgVy});"
      ]
    },
    {
      "type": "button",
      "id": "remove-inside",
      "text": "Remove",
      "width": "5em",
      "action": [
        "for (var i = 0; i < getNumberOfAtoms(); i++) {",
        "  if (getAtomProperties(i).x < getObstacleProperties(0).x) {",
        "     removeAtom(i);",
        "     break;",
        "   }",
        "}"
      ]
    },
    {
      "type": "button",
      "id": "remove-outside",
      "text": "Remove",
      "width": "5em",
      "action": [
        "for (var i = 0; i < getNumberOfAtoms(); i++) {",
        "  if (getAtomProperties(i).x > (getObstacleProperties(0).x + getObstacleProperties(0).width)) {",
        "     removeAtom(i);",
        "     break;",
        "   }",
        "}"
      ]
    },
    {
      "type": "button",
      "id": "heat-inside",
      "text": "Heat",
      "width": "5em",
      "action": [
        "if (get('temperature') < 10000) {",
        "  for (var i = 0; i < getNumberOfAtoms(); i++) {",
        "    var atom = getAtomProperties(i);",
        "    if (atom.x < getObstacleProperties(0).x) {",
        "       setAtomProperties(i, { vx: atom.vx * 1.1, vy: atom.vy * 1.1 }, false, false, {supressRepaint: true})",
        "    }",
        "  }",
        "  repaint();",
        "}",
        "else {",
        "    alert('Max temperature reached.');",
        "}"
      ]
    },
    {
      "type": "button",
      "id": "heat-outside",
      "text": "Heat",
      "width": "5em",
      "action": [
        "if (get('temperature') < 10000) {",
        "  for (var i = 0; i < getNumberOfAtoms(); i++) {",
        "    var atom = getAtomProperties(i);",
        "    if (atom.x > getObstacleProperties(0).x) {",
        "       setAtomProperties(i, { vx: atom.vx * 1.1, vy: atom.vy * 1.1 }, false, false, {supressRepaint: true})",
        "    }",
        "  }",
        "  repaint();",
        "}",
        "else {",
        "    alert('Max temperature reached.');",
        "}"
      ]
    },
    {
      "type": "button",
      "id": "cool-inside",
      "text": "Cool",
      "width": "5em",
      "action": [
        "for (var i = 0; i < getNumberOfAtoms(); i++) {",
        "  var atom = getAtomProperties(i);",
        "  if (atom.x < getObstacleProperties(0).x) {",
        "     setAtomProperties(i, { vx: atom.vx * 0.9, vy: atom.vy * 0.9 }, false, false, {supressRepaint: true})",
        "   }",
        "}",
        "repaint();"
      ]
    },
    {
      "type": "button",
      "id": "cool-outside",
      "text": "Cool",
      "width": "5em",
      "action": [
        "for (var i = 0; i < getNumberOfAtoms(); i++) {",
        "  var atom = getAtomProperties(i);",
        "  if (atom.x > getObstacleProperties(0).x) {",
        "     setAtomProperties(i, { vx: atom.vx * 0.9, vy: atom.vy * 0.9}, false, false, {supressRepaint: true})",
        "   }",
        "}",
        "repaint();"
      ]
    }
  ],
  "layout": {
    "left": [
      ["purple-label"],
      ["add-inside"],
      ["remove-inside"],
      ["heat-inside"],
      ["cool-inside"]
    ],
    "right": [
      ["yellow-label"],
      ["add-outside"],
      ["remove-outside"],
      ["heat-outside"],
      ["cool-outside"]
    ],
    "bottom": [ "show-velocity" ]
  },
  "template": [
    {
      "id": "left",
      "top": "5em",
      "right": "model.left",
      "align": "center"
    },
    {
      "id": "right",
      "top": "5em",
      "left": "model.right",
      "align": "center"
    },
    {
      "id": "bottom",
      "left": "model.left",
      "top": "model.bottom"
    }
  ]
}
