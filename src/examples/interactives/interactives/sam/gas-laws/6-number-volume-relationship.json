{
  "title": "The Number-Volume Relationship",
  "publicationStatus": "draft",
  "subtitle": "Explore how the volume of a gas is related to the number of gas molecules.",
  "about": "The model contains gas molecules under constant pressure. The barrier moves when the volume of gas expands or contracts. Run the model and select different numbers of molecules from the drop-down menu. What is the relationship between the number of molecules and the volume of a gas?",
  "models": [
    {
      "id": "page5$0",
      "url": "/imports/legacy-mw-content/converted/sam-activities/gas-laws/original-interactives-in-pages/page6/page6$0.json",
      "viewOptions": {
        "controlButtons": "play_reset",
        "imageMapping": {
          "ruler.png": "ruler.svg"
        }
      }
    }
  ],
  "outputs": [
    {
      "name": "volume",
      "units": "nm?",
      "label": "area",
      "value": [
        "return getObstacleProperties(0).x * 2;"
      ]
    }
  ],
  "components": [
    {
      "type": "pulldown",
      "id": "pulldown1",
      "options": [
        {
          "text": "120 molecules",
          "action": [
            "var opt = {supressRepaint: true};",
            "var obsX = getObstacleProperties(0).x;",
            "var xMax = obsX - getElementProperties(3).sigma;",
            "var h = get('height');",
            "while (getNumberOfAtoms() < 120) {",
            "  addAtom({ element: 3, x: xMax * Math.random(), y: h * Math.random()}, opt);",
            "}",
            "while (getNumberOfAtoms() > 120) {",
            "  removeAtom(getNumberOfAtoms() - 1, opt);",
            "}",
            "repaint();"
          ]
        },
        {
          "text": "100 molecules",
          "action": [
            "var opt = {supressRepaint: true};",
            "var obsX = getObstacleProperties(0).x;",
            "var xMax = obsX - getElementProperties(3).sigma;",
            "var h = get('height');",
            "while (getNumberOfAtoms() < 100) {",
            "  addAtom({ element: 3, x: xMax * Math.random(), y: h * Math.random()}, opt);",
            "}",
            "while (getNumberOfAtoms() > 100) {",
            "  removeAtom(getNumberOfAtoms() - 1, opt);",
            "}",
            "repaint();"
          ]
        },
        {
          "text": "80 molecules",
          "action": [
            "var opt = {supressRepaint: true};",
            "var obsX = getObstacleProperties(0).x;",
            "var xMax = obsX - getElementProperties(3).sigma;",
            "var h = get('height');",
            "while (getNumberOfAtoms() < 80) {",
            "  addAtom({ element: 3, x: xMax * Math.random(), y: h * Math.random()}, opt);",
            "}",
            "while (getNumberOfAtoms() > 80) {",
            "  removeAtom(getNumberOfAtoms() - 1, opt);",
            "}",
            "repaint();"
          ]
        },
        {
          "text": "60 molecules",
          "action": [
            "var opt = {supressRepaint: true};",
            "var obsX = getObstacleProperties(0).x;",
            "var xMax = obsX - getElementProperties(3).sigma;",
            "var h = get('height');",
            "while (getNumberOfAtoms() < 60) {",
            "  addAtom({ element: 3, x: xMax * Math.random(), y: h * Math.random()}, opt);",
            "}",
            "while (getNumberOfAtoms() > 60) {",
            "  removeAtom(getNumberOfAtoms() - 1, opt);",
            "}",
            "repaint();"
          ]
        },
        {
          "text": "40 molecules",
          "action": [
            "var opt = {supressRepaint: true};",
            "var obsX = getObstacleProperties(0).x;",
            "var xMax = obsX - getElementProperties(3).sigma;",
            "var h = get('height');",
            "while (getNumberOfAtoms() < 40) {",
            "  addAtom({ element: 3, x: xMax * Math.random(), y: h * Math.random()}, opt);",
            "}",
            "while (getNumberOfAtoms() > 40) {",
            "  removeAtom(getNumberOfAtoms() - 1, opt);",
            "}",
            "repaint();"
          ]
        },
        {
          "text": "20 molecules",
          "action": [
            "var opt = {supressRepaint: true};",
            "var obsX = getObstacleProperties(0).x;",
            "var xMax = obsX - getElementProperties(3).sigma;",
            "var h = get('height');",
            "while (getNumberOfAtoms() < 20) {",
            "  addAtom({ element: 3, x: xMax * Math.random(), y: h * Math.random()}, opt);",
            "}",
            "while (getNumberOfAtoms() > 20) {",
            "  removeAtom(getNumberOfAtoms() - 1, opt);",
            "}",
            "repaint();"
          ]
        }
      ]
    },
    {
      "type": "slider",
      "id": "volume-slider",
      "min": 0,
      "max": 8,
      "displayValue": "return format('1.2f')(value)",
      "steps": 80,
      "title": "Volume of Gas",
      "property": "volume"
    }
  ]
}